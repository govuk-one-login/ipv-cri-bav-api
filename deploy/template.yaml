AWSTemplateFormatVersion: "2010-09-09"
Transform: "AWS::Serverless-2016-10-31"
Description: "Digital Identity IPV CRI BAV API"

Parameters:
  CodeSigningConfigArn:
    Type: String
    Default: "none"
    Description: >
      The ARN of the Code Signing Config to use, provided by the deployment pipeline
  Environment:
    Description: "The environment type"
    Type: "String"
    AllowedValues:
      - "dev"
      - "build"
      - "staging"
      - "integration"
      - "production"
    ConstraintDescription: Ensure environment variable is set to one of dev, build, staging, integration or production.
  PermissionsBoundary:
    Description: "The ARN of the permissions boundary to apply when creating IAM roles"
    Type: String
    Default: "none"
  SecretPrefix:
    Type: String
    Default: "none"
    Description: Secrets name prefix
  VpcStackName:
    Type: String
    Default: "vpc-cri"
    Description: The name of the VPC stack deployed.
  L2DynamoStackName:
    Type: String
    Default: "bav-cri-ddb"
    Description: The name of the L2 DynamoDB stack deployed.
  L2KMSStackName:
    Type: String
    Default: "bav-cri-kms"
    Description: The name of the L2 DynamoDB stack deployed.
  DeployAlarmsInDev:
    Description: "Set to the string value `true` to deploy alarms in a DEV environment"
    Type: String
    Default: false
  SupportManualURL:
    Description: "Link to the BAV support manual"
    Type: String
    Default: 'https://govukverify.atlassian.net/wiki/spaces/BAC/pages/3785916803/BAV+BE+Metrics+Alerts'
  IPVStubStackName:
    Type: String
    Default: "bav-ipv-stub"
    Description: The name of the IPV stub stack deployed.
  LambdaConcurrency:
    Description: "Reserved concurrency for Lambdas running in non-DEV environments"
    Type: Number
    Default: 20
  LambdaConcurrencyThreshold:
    Description: "Threshold for Reserved concurrency running in non-DEV environments"
    Type: Number
    Default: 16  #80% of Lambda concurrency
  ApplyReservedConcurrencyInDev:
    Description: "Set to true to apply reserved concurrency when deploying in DEV environments"
    Type: String
    Default: "false"
  LambdaDeploymentPreference:
    Description: "Specifies the configuration to enable gradual Lambda deployments. This value is picked up from the LambdaCanaryDeployment on the pipeline "
    Type: String
    Default: AllAtOnce

Mappings:
  EnvironmentConfiguration: # This is where you store per-environment settings.
    dev:
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables #pragma: allowlist secret
      logretentionindays: 30
      apiTracingEnabled: true
    build:
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables #pragma: allowlist secret
      logretentionindays: 30
      apiTracingEnabled: true
    staging:
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables #pragma: allowlist secret
      logretentionindays: 30
      apiTracingEnabled: true
    integration:
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables #pragma: allowlist secret
      logretentionindays: 30
      apiTracingEnabled: false
    production:
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceProductionVariables #pragma: allowlist secret
      logretentionindays: 30
      apiTracingEnabled: false

  PlatformConfiguration:
    dev:
      CSLSEGRESS: arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython-2
    build:
      CSLSEGRESS: arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython-2
    staging:
      CSLSEGRESS: arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython-2
    integration:
      CSLSEGRESS: arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython-2
    production:
      CSLSEGRESS: arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython-2

  EnvironmentVariables: # This is all the environment specific environment variables that don't belong in globals.
    dev:
      ISSUER: 'https://review-bav.dev.account.gov.uk'
      DNSSUFFIX: review-bav.dev.account.gov.uk
      MESSAGERETENTIONPERIODDAYS: 345600 # Default: 4 days
      TXMAMESSAGERETENTIONPERIODDAYS: 604800 # Default: 7 days
      PARTIALNAMEMATCHRENTIONPERIODDAYS: 259200 # Default: 3 days
      RESOURCETTLSECS: 1209600 # Default 14 days
      CLIENTS: 
          '[
            {
              "jwksEndpoint":"https://bav-ipv-stub-ipvstub.review-bav.dev.account.gov.uk/.well-known/jwks.json",
              "clientId":"5C584572",
              "redirectUri":"https://bav-ipv-stub-ipvstub.review-bav.dev.account.gov.uk/redirect?id=bav",
              "experianTokenEndpoint":"https://kq8oesdeq6.execute-api.eu-west-2.amazonaws.com/dev/oauth2/experianone/v1/token",
              "experianVerifyEndpoint":"https://kq8oesdeq6.execute-api.eu-west-2.amazonaws.com/dev/services/v0/applications/3"
            }
          ]'
      AUTHSESSIONTTLSECS: 86400 # 1 day in seconds
      TESTHARNESSURL: "https://bav-test-harness-testharness.review-bav.dev.account.gov.uk"
      HMRCBASEURL: "https://kq8oesdeq6.execute-api.eu-west-2.amazonaws.com/dev"
      HMRCVERIFYBASEURL: "https://kq8oesdeq6.execute-api.eu-west-2.amazonaws.com/dev/misc/bank-account"
    build:
      ISSUER: 'https://review-bav.build.account.gov.uk'
      DNSSUFFIX: review-bav.build.account.gov.uk
      MESSAGERETENTIONPERIODDAYS: 345600 # Default: 4 days
      TXMAMESSAGERETENTIONPERIODDAYS: 604800 # Default: 7 days
      PARTIALNAMEMATCHRENTIONPERIODDAYS: 259200 # Default: 3 days
      RESOURCETTLSECS: 1209600 # Default 14 days
      CLIENTS: # TODO: Swap sandbox journey experian URLs to outbound proxy URLs
          '[
            {
              "jwksEndpoint":"https://ipvstub.review-bav.build.account.gov.uk/.well-known/jwks.json",
              "clientId":"BD7B2A5D",
              "redirectUri":"https://ipvstub.review-bav.build.account.gov.uk/redirect?id=bav",
              "experianTokenEndpoint":"https://c99d36403h.execute-api.eu-west-2.amazonaws.com/build/oauth2/experianone/v1/token",
              "experianVerifyEndpoint":"https://c99d36403h.execute-api.eu-west-2.amazonaws.com/build/services/v0/applications/3"
            },
            {
              "jwksEndpoint":"https://ipvstub.review-bav.build.account.gov.uk/.well-known/jwks.json",
              "clientId":"SandboxJourneyFlow",
              "redirectUri":"https://ipvstub.review-bav.build.account.gov.uk/redirect?id=bav",
              "experianTokenEndpoint":"https://uk-api.experian.com/oauth2/experianone/v1/token",
              "experianVerifyEndpoint":"https://uk-api.experian.com/decisionanalytics/crosscore/nprxuz82vn3d/services/v0/applications/3"
            }
          ]'
      AUTHSESSIONTTLSECS: 950400 # 11 days in seconds
      HMRCBASEURL: "https://c99d36403h.execute-api.eu-west-2.amazonaws.com/build"
      HMRCVERIFYBASEURL: "https://c99d36403h.execute-api.eu-west-2.amazonaws.com/build/misc/bank-account"
      TESTHARNESSURL: "https://testharness.review-bav.build.account.gov.uk"
    staging:
      ISSUER: 'https://review-bav.staging.account.gov.uk'
      DNSSUFFIX: review-bav.staging.account.gov.uk
      MESSAGERETENTIONPERIODDAYS: 345600 # Default: 4 days
      TXMAMESSAGERETENTIONPERIODDAYS: 604800 # Default: 7 days
      PARTIALNAMEMATCHRENTIONPERIODDAYS: 259200 # Default: 3 days
      RESOURCETTLSECS: 1209600 # Default 14 days
      CLIENTS:
          '[
            {
              "jwksEndpoint":"https://api.identity.staging.account.gov.uk/.well-known/jwks.json",
              "clientId":"03A5A659-17AA-453F-B905-95D2804823D1",
              "redirectUri":"https://identity.staging.account.gov.uk/credential-issuer/callback?id=bav",
              "experianTokenEndpoint":"https://x0ch9rvyhe.execute-api.eu-west-2.amazonaws.com/staging/oauth2/experianone/v1/token",
              "experianVerifyEndpoint":"https://x0ch9rvyhe.execute-api.eu-west-2.amazonaws.com/staging/services/v0/applications/3"
            }
          ]'
      AUTHSESSIONTTLSECS: 950400 # 11 days in seconds
      HMRCBASEURL: "https://x0ch9rvyhe.execute-api.eu-west-2.amazonaws.com/staging"
      HMRCVERIFYBASEURL: "https://x0ch9rvyhe.execute-api.eu-west-2.amazonaws.com/staging/misc/bank-account"
    integration:
      ISSUER: 'https://review-bav.integration.account.gov.uk'
      DNSSUFFIX: review-bav.integration.account.gov.uk
      MESSAGERETENTIONPERIODDAYS: 345600 # Default: 4 days
      TXMAMESSAGERETENTIONPERIODDAYS: 604800 # Default: 7 days
      PARTIALNAMEMATCHRENTIONPERIODDAYS: 259200 # Default: 3 days
      RESOURCETTLSECS: 1209600 # Default 14 days
      CLIENTS:
          '[
            {
              "jwksEndpoint":"https://api.identity.integration.account.gov.uk/.well-known/jwks.json",
              "clientId":"AE140E43-1987-4EE8-86CC-BEF19FC9FF3F",
              "redirectUri":"https://identity.integration.account.gov.uk/credential-issuer/callback?id=bav",
              "experianTokenEndpoint":"https://uk-api.experian.com/oauth2/experianone/v1/token",
              "experianVerifyEndpoint":"https://uk-api.experian.com/decisionanalytics/crosscore/nprxuz82vn3d/services/v0/applications/3"
            }
          ]'
      AUTHSESSIONTTLSECS: 950400 # 11 days in seconds
      HMRCBASEURL: "https://proxy.review-bav.integration.account.gov.uk/hmrc"
      HMRCVERIFYBASEURL: "https://proxy.review-bav.integration.account.gov.uk/hmrc/misc/bank-account"
    production:
      ISSUER: 'https://review-bav.account.gov.uk'
      DNSSUFFIX: review-bav.account.gov.uk
      MESSAGERETENTIONPERIODDAYS: 345600 # Default: 4 days
      TXMAMESSAGERETENTIONPERIODDAYS: 604800 # Default: 7 days
      PARTIALNAMEMATCHRENTIONPERIODDAYS: 259200 # Default: 3 days
      RESOURCETTLSECS: 1209600 # Default 14 days
      CLIENTS:
          '[
            {
              "jwksEndpoint":"https://api.identity.account.gov.uk/.well-known/jwks.json",
              "clientId":"C910A762-4BB2-400D-8F3D-4D7E6C84E342",
              "redirectUri":"https://identity.account.gov.uk/credential-issuer/callback?id=bav",
              "experianTokenEndpoint":"https://uk-api.experian.com/oauth2/experianone/v1/token",
              "experianVerifyEndpoint":"https://uk-api.experian.com/decisionanalytics/crosscore/npfygurfzc3g/services/v0/applications/3"
            }
          ]'
      AUTHSESSIONTTLSECS: 950400 # 11 days in seconds
      HMRCBASEURL: "https://proxy.review-bav.account.gov.uk/hmrc"
      HMRCVERIFYBASEURL: "https://proxy.review-bav.account.gov.uk/misc/bank-account/hmrc"
  TxMAAccounts:
    # EVENTS is used to egress to TxMA.
    dev:
      AUDIT: arn:aws:iam::725018305812:root
      EVENTS: arn:aws:iam::248098332657:root
    build:
      AUDIT: arn:aws:iam::761029721660:root
      EVENTS: arn:aws:iam::750703655225:root
    staging:
      AUDIT: arn:aws:iam::778587367904:root
      EVENTS: arn:aws:iam::178023842775:root
    integration:
      AUDIT: arn:aws:iam::423448613278:root
      EVENTS: arn:aws:iam::729485541398:root
    production:
      AUDIT: arn:aws:iam::348043515437:root
      EVENTS: arn:aws:iam::451773080033:root

Conditions:
  CreateDevResources: !Equals
    - !Ref Environment
    - dev
  IsProdLikeEnvironment: !Or
    - !Equals [!Ref Environment, staging]
    - !Equals [!Ref Environment, integration]
    - !Equals [!Ref Environment, production]
  IsNotDevelopment: !Or
    - !Equals [ !Ref Environment, build ]
    - !Equals [ !Ref Environment, staging ]
    - !Equals [ !Ref Environment, integration ]
    - !Equals [ !Ref Environment, production ]
  IsNotProdLikeEnvironment: !Not
    - !Condition IsProdLikeEnvironment
  IsPersonalIdentifiableInformationEnvironment: !Or
    - !Equals [!Ref Environment, integration]
    - !Equals [!Ref Environment, production]
  IsOutboundSQSConnected: !Or
    - !Equals [!Ref Environment, staging]
    - !Equals [!Ref Environment, integration]
    - !Equals [!Ref Environment, production]
  UseCodeSigning:
    Fn::Not:
      - Fn::Equals:
          - !Ref CodeSigningConfigArn
          - "none"
  UsePermissionsBoundary:
    Fn::Not:
      - Fn::Equals:
          - !Ref PermissionsBoundary
          - "none"
  UseSecretPrefix:
    Fn::Not:
      - Fn::Equals:
          - !Ref SecretPrefix
          - "none"
  UseCanaryDeploymentAlarms: !Not [ !Equals [ !Ref LambdaDeploymentPreference, AllAtOnce ]]
  DeployAlarms: !Or
    - Condition: IsNotDevelopment
    - !Equals [!Ref DeployAlarmsInDev, true]
  ApplyReservedConcurrency: !Or
    - Condition: IsNotDevelopment
    - !Equals [!Ref ApplyReservedConcurrencyInDev, true]
  NotLocalTestStack:
    Fn::Not:
      - Fn::And:
          - Fn::Equals:
              - !Ref Environment
              - dev
          - Fn::Not:
              - Fn::Equals:
                  - !Sub "${AWS::StackName}"
                  - "bav-cri-api"

Globals:
  Function:
    Runtime: nodejs18.x
    VpcConfig:
      SecurityGroupIds:
        - !GetAtt LambdaEgressSecurityGroup.GroupId
      SubnetIds:
        - Fn::ImportValue:
            "Fn::Sub": "${VpcStackName}-ProtectedSubnetIdA"
        - Fn::ImportValue:
            "Fn::Sub": "${VpcStackName}-ProtectedSubnetIdB"
    PermissionsBoundary: !If
      - UsePermissionsBoundary
      - !Ref PermissionsBoundary
      - !Ref AWS::NoValue
    CodeSigningConfigArn: !If
      - UseCodeSigning
      - !Ref CodeSigningConfigArn
      - !Ref AWS::NoValue
    Layers:
      - !Sub
        - '{{resolve:secretsmanager:${SecretArn}:SecretString:NODEJS_LAYER}}' #pragma: allowlist secret # or PYTHON_LAYER or JAVA_LAYER
        - SecretArn: !FindInMap [ EnvironmentConfiguration, !Ref Environment, dynatraceSecretArn ]
    Timeout: 30 # seconds
    Tracing: Active
    MemorySize: 1024
    Architectures:
      - arm64
    Environment:
      Variables:
        AWS_LAMBDA_EXEC_WRAPPER: /opt/dynatrace
        DT_CONNECTION_AUTH_TOKEN: !Sub
          - '{{resolve:secretsmanager:${SecretArn}:SecretString:DT_CONNECTION_AUTH_TOKEN}}' #pragma: allowlist secret
          - SecretArn: !FindInMap [ EnvironmentConfiguration, !Ref Environment, dynatraceSecretArn ]
        DT_CONNECTION_BASE_URL: !Sub
          - '{{resolve:secretsmanager:${SecretArn}:SecretString:DT_CONNECTION_BASE_URL}}' #pragma: allowlist secret
          - SecretArn: !FindInMap [ EnvironmentConfiguration, !Ref Environment, dynatraceSecretArn ]
        DT_CLUSTER_ID: !Sub
          - '{{resolve:secretsmanager:${SecretArn}:SecretString:DT_CLUSTER_ID}}' #pragma: allowlist secret
          - SecretArn: !FindInMap [ EnvironmentConfiguration, !Ref Environment, dynatraceSecretArn ]
        DT_LOG_COLLECTION_AUTH_TOKEN: !Sub
          - '{{resolve:secretsmanager:${SecretArn}:SecretString:DT_LOG_COLLECTION_AUTH_TOKEN}}' #pragma: allowlist secret
          - SecretArn: !FindInMap [ EnvironmentConfiguration, !Ref Environment, dynatraceSecretArn ]
        DT_TENANT: !Sub
          - '{{resolve:secretsmanager:${SecretArn}:SecretString:DT_TENANT}}' #pragma: allowlist secret
          - SecretArn: !FindInMap [ EnvironmentConfiguration, !Ref Environment, dynatraceSecretArn ]
        DT_OPEN_TELEMETRY_ENABLE_INTEGRATION: "true"
        AWS_STACK_NAME: !Sub ${AWS::StackName}
        POWERTOOLS_LOG_LEVEL: !If [IsNotProdLikeEnvironment, "DEBUG", "INFO"] # The LogLevel for the AWS PowerTools LogHelper
        POWERTOOLS_METRICS_NAMESPACE: BAV-CRI
        TXMA_QUEUE_URL: !Ref TxMASQSQueue
        PERSON_IDENTITY_TABLE_NAME:
          Fn::ImportValue: !Sub "${L2DynamoStackName}-person-identity-table-name"
        SESSION_TABLE:
          Fn::ImportValue: !Sub "${L2DynamoStackName}-session-table-name"
        EXPERIAN_TOKEN_TABLE:
          Fn::ImportValue: !Sub "${L2DynamoStackName}-experian-token-table-name"
        ISSUER: !FindInMap [EnvironmentVariables, !Ref Environment, ISSUER]
        SECRET_PREFIX: !If [
          UseSecretPrefix,
          !Ref SecretPrefix,
          !Ref AWS::StackName,
        ]
    AutoPublishAlias: live

Resources:
  LambdaEgressSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: >-
        Permits outbound on port 443 from within the VPC to the internet.
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow to the wider internet on port 443
          FromPort: 443
          IpProtocol: tcp
          ToPort: 443
      VpcId:
        Fn::ImportValue: !Sub "${VpcStackName}-VpcId"

  PartialNameMatchBucketKey:
    Type: AWS::KMS::Key
    Properties:
      Description: Specific KMS CMK for Partial Matches S3 Bucket Encryption
      Enabled: true
      KeyPolicy:
        Version: "2012-10-17"
        Statement:
          - Sid: AllowIdentityPoliciesInAccountToDetermineKeyAccess
            Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action:
              - "kms:*"
            Resource:
              - "*"
      KeySpec: SYMMETRIC_DEFAULT
      KeyUsage: ENCRYPT_DECRYPT
      MultiRegion: false
      PendingWindowInDays: 7
      Tags:
        - Key: KeyType
          Value: Encryption Key
        - Key: Environment
          Value: !Sub ${Environment}

  PartialNameMatchBucketKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !If
        -  CreateDevResources
        - !Sub "alias/PartialNameMatchBucketEncryptionKey-${AWS::StackName}"
        - alias/PartialNameMatchBucketEncryptionKey
      TargetKeyId: !Ref PartialNameMatchBucketKey

  PartialNameMatchBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref PartialNameMatchBucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: DenyIncorrectEncryptionType
            Effect: Deny
            Principal: "*"
            Action:
              - s3:PutObject
            Resource:
              - !Join ["", [ "arn:aws:s3:::", !Ref PartialNameMatchBucket, "/*"]]
            Condition:
              StringNotEquals:
                "s3:x-amz-server-side-encryption": "aws:kms"
          - Sid: DenyUnencryptedObjectUploads
            Effect: Deny
            Principal: "*"
            Action:
              - s3:PutObject
            Resource:
              - !Join ["", [ "arn:aws:s3:::", !Ref PartialNameMatchBucket, "/*"]]
            Condition:
              "Null":
                "s3:x-amz-server-side-encryption": true
          - Sid: RestrictGetObjectToAthenaOnly
            Effect: Deny
            Principal: "*"
            Action:
              - "s3:GetObject*"
            Resource:
              - !Join ["", [ "arn:aws:s3:::", !Ref PartialNameMatchBucket, "/*"]]
            Condition:
              StringNotEquals:
                "aws:CalledVia": "athena.amazonaws.com"
    DependsOn: PartialNameMatchBucket

  PartialNameMatchBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      BucketName: !Sub ${AWS::StackName}-partial-name-match-${Environment}
      VersioningConfiguration:
        Status: "Enabled"
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: aws:kms
              KMSMasterKeyID: !Ref PartialNameMatchBucketKeyAlias
            BucketKeyEnabled: true
      LifecycleConfiguration:
        Rules:
          - Id: ExpiryRule
            ExpirationInDays: 30
            NoncurrentVersionExpirationInDays: 1
            Status: Enabled

  PartialNameMatchAthenaResultsBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref PartialNameMatchAthenaResultsBucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: DenyIncorrectEncryptionType
            Effect: Deny
            Principal: "*"
            Action:
              - s3:PutObject
            Resource:
              - !Join ["", [ "arn:aws:s3:::", !Ref PartialNameMatchAthenaResultsBucket, "/*"]]
            Condition:
              StringNotEquals:
                "s3:x-amz-server-side-encryption": "aws:kms"
          - Sid: DenyUnencryptedObjectUploads
            Effect: Deny
            Principal: "*"
            Action:
              - s3:PutObject
            Resource:
              - !Join ["", [ "arn:aws:s3:::", !Ref PartialNameMatchAthenaResultsBucket, "/*"]]
            Condition:
              "Null":
                "s3:x-amz-server-side-encryption": true
          - Sid: RestrictObjectAccessToAthenaOnly
            Effect: Deny
            Principal: "*"
            Action:
              - "s3:PutObject*"
              - "s3:GetObject*"
            Resource:
              - !Join ["", [ "arn:aws:s3:::", !Ref PartialNameMatchAthenaResultsBucket, "/*"]]
            Condition:
              StringNotEquals:
                "aws:CalledVia": "athena.amazonaws.com"
    DependsOn: PartialNameMatchAthenaResultsBucket

  PartialNameMatchAthenaResultsBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      BucketName: !Sub ${AWS::StackName}-partial-name-athena-results-${Environment}
      VersioningConfiguration:
        Status: "Enabled"
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: aws:kms
              KMSMasterKeyID: !Ref PartialNameMatchBucketKeyAlias
            BucketKeyEnabled: true
      LifecycleConfiguration:
        Rules:
          - Id: ExpiryRule
            ExpirationInDays: 30
            NoncurrentVersionExpirationInDays: 1
            Status: Enabled

  AthenaQueryManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: "Grants console access to AWS Athena to query the BAV results bucket"
      ManagedPolicyName: !Sub "${AWS::StackName}-athena-query-results"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: "AllowSpecificAccessToGlue"
            Effect: Allow
            Action:
              - "glue:SearchTables"
              - "glue:GetTables"
              - "glue:GetDatabases"
              - "glue:GetTable"
              - "glue:GetDatabase"
            Resource:
              - !Sub "arn:aws:glue:${AWS::Region}:${AWS::AccountId}:table/${PartialNameMatchGlueDatabase}/${PartialNameMatchGlueTable}"
              - !Sub "arn:aws:glue:${AWS::Region}:${AWS::AccountId}:database/${PartialNameMatchGlueDatabase}"
              - !Sub "arn:aws:glue:${AWS::Region}:${AWS::AccountId}:catalog"
          - Sid: "AllowSpecificAccessToS3SourceBuckets"
            Effect: Allow
            Action:
              - "s3:ListBucket"
              - "s3:GetObject"
            Resource:
              - !Join ["", [ "arn:aws:s3:::", !Ref PartialNameMatchBucket]]
              - !Join ["", [ "arn:aws:s3:::", !Ref PartialNameMatchBucket, "/*"]]
          - Sid: "AllowSpecificAccessToS3ResultsBuckets"
            Effect: Allow
            Action:
              - "s3:ListBucket"
              - "s3:GetBucketAcl"
              - "s3:PutObject"
              - "s3:GetObject"
              - "s3:GetBucketLocation"
            Resource:
              - !Join ["", [ "arn:aws:s3:::", !Ref PartialNameMatchAthenaResultsBucket]]
              - !Join ["", [ "arn:aws:s3:::", !Ref PartialNameMatchAthenaResultsBucket, "/*"]]
          - Sid: "AllowKMSAccessToKeyRefByAliasOnly"
            Effect: Allow
            Action:
              - "kms:Decrypt"
              - "kms:GenerateDataKey"
            Resource:
              - !Sub "arn:aws:kms:${AWS::Region}:${AWS::AccountId}:key/*"
            Condition:
              ForAnyValue:StringLike:
                kms:ResourceAliases: !Ref PartialNameMatchBucketKeyAlias
          - Sid: "AllowSpecificAccessToAthena"
            Effect: Allow
            Action:
              - "athena:GetQueryResults"
              - "athena:StartQueryExecution"
              - "athena:GetQueryExecution"
              - "athena:GetWorkGroup"
            Resource:
              - !Sub "arn:aws:athena:${AWS::Region}:${AWS::AccountId}:workgroup/${PartialNameMatchAthenaWorkgroup}"
          - Sid: "AllowAthenaListAllWorkGroups"
            Effect: Allow
            Action:
              - "athena:ListWorkGroups"
            Resource:
              - "*"

  JsonWebKeysBucket:
    Type: "AWS::S3::Bucket"
    DeletionPolicy: Delete
    Properties:
      BucketName: !Sub ${AWS::StackName}-jwks-bav-${Environment}
      VersioningConfiguration:
        Status: "Enabled"
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256

  JWKSBucketRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: "sts:AssumeRole"
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
        Version: 2012-10-17
      Policies:
        - PolicyName: AccessJWKSjson
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "s3:Get*"
                Resource:
                  - !Sub "arn:aws:s3:::${JsonWebKeysBucket}/.well-known/jwks.json"
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue

  ### Start of API Gateway definition.

  BAVRestApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref Environment
      AlwaysDeploy: true
      OpenApiVersion: 3.0.1
      AccessLogSetting:
        Format: >-
          {
          "requestId":"$context.requestId",
          "ip": "$context.identity.sourceIp",
          "requestTime":"$context.requestTime",
          "httpMethod":"$context.httpMethod",
          "path": "$context.path",
          "routeKey":"$context.routeKey",
          "status":"$context.status",
          "protocol":"$context.protocol",
          "responseLength":"$context.responseLength",
          "responseLatency":"$context.responseLatency",
          "integrationLatency":"$context.integrationLatency"
          }
        DestinationArn: !GetAtt BAVAPIGatewayAccessLogGroup.Arn
      EndpointConfiguration:
        Type: REGIONAL
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: './bav-spec.yaml'
        OpenApiVersion: 3.0.1
      MethodSettings:
        - LoggingLevel: INFO
          MetricsEnabled: true
          ThrottlingBurstLimit: 400
          ThrottlingRateLimit: 200
          # Disable data trace in production and integration to avoid logging customer sensitive information
          DataTraceEnabled: !If
            - IsPersonalIdentifiableInformationEnvironment
            - false
            - true
          HttpMethod: "*"
          ResourcePath: "/*"
      TracingEnabled: true
      Tags:
        Product: GOV.UK Sign In
        System: BAV
        Environment: !Ref Environment
        Service: backend
        Name: BavRestApi
        Source: alphagov/di-devplatform-demo-sam-app/sam-app/template.yaml
        FMSRegionalPolicy: false
        CustomPolicy: true

  BAVAPIGatewayAccessLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays:
        !FindInMap [
          EnvironmentConfiguration,
          !Ref Environment,
          logretentionindays,
        ]
      Tags:
        - Key: Product
          Value: GOV.UK Sign In
        - Key: System
          Value: Dev Platform
        - Key: Environment
          Value: Demo
        - Key: Service
          Value: backend
        - Key: Name
          Value: APIGatewayAccessLogGroup

  ### End of API Gateway definition.

  WAFv2ACLAssociation:
    Type: AWS::WAFv2::WebACLAssociation
    Properties:
      ResourceArn: !Sub "arn:aws:apigateway:${AWS::Region}::/restapis/${BAVRestApi}/stages/${BAVRestApi.Stage}"
      WebACLArn: !Sub "{{resolve:ssm:/${Environment}/Platform/Security/Block/WafArn}}"

  ## API Gateway Custom Domain definition

  BAVApiCustomDomainName:
    Type: AWS::ApiGateway::DomainName
    Properties:
      DomainName: !If
        - CreateDevResources
        - !Sub
          - "api-${AWS::StackName}.${DNSSUFFIX}"
          - DNSSUFFIX:
              !FindInMap [ EnvironmentVariables, !Ref Environment, DNSSUFFIX ]
        - !Sub
          - "api.${DNSSUFFIX}"
          - DNSSUFFIX:
             !FindInMap [ EnvironmentVariables, !Ref Environment, DNSSUFFIX ]

      EndpointConfiguration:
        Types:
          - REGIONAL
      RegionalCertificateArn: !Sub "{{resolve:ssm:/${Environment}/Platform/ACM/PrimaryZoneWildcardCertificateARN}}"
      SecurityPolicy: TLS_1_2

  BAVApiBasePath:
    Type: AWS::ApiGateway::BasePathMapping
    DependsOn: "BAVApiCustomDomainName"
    Properties:
      DomainName: !Ref BAVApiCustomDomainName
      RestApiId: !Ref BAVRestApi
      Stage: !Sub "${BAVRestApi.Stage}"

  BAVApiCertificateRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      Name: !Ref BAVApiCustomDomainName
      Type: A
      HostedZoneId: !Sub "{{resolve:ssm:/${Environment}/Platform/Route53/PrimaryZoneID}}"
      AliasTarget:
        DNSName: !GetAtt BAVApiCustomDomainName.RegionalDomainName
        HostedZoneId: !GetAtt BAVApiCustomDomainName.RegionalHostedZoneId

  BAVRestAPIFatalErorMetricFilter:
    Type: AWS::Logs::MetricFilter
    Condition: DeployAlarms
    Properties:
      LogGroupName: !Ref BAVAPIGatewayAccessLogGroup
      FilterPattern: '{ $.level = "FATAL" || $.message = "Unhandled Exception:*" }'
      MetricTransformations:
        -
          MetricValue: "1"
          MetricNamespace: !Sub "${AWS::StackName}/LogMessages"
          MetricName: "BAVResetAPI-Fatalerror"

  BAVRestAPIFatalErrorAlarm:
    DependsOn:
      - "BAVRestAPIFatalErorMetricFilter"
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub "${AWS::StackName}-BAVRestAPI-FatalErrorAlarm"
      AlarmDescription: !Sub "Trigger an alarm when Fatal Error occurs. ${SupportManualURL}"
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      AlarmActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      InsufficientDataActions: [ ]
      MetricName: BAVResetAPI-Fatalerror
      Namespace: !Sub "${AWS::StackName}/LogMessages"
      Statistic: Sum
      Dimensions: [ ]
      Period: 60
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  ### End of API Gateway Custom Domain definition

  ### Function Definitions
  ## SessionHandler
  SessionFunction:
    Type: AWS::Serverless::Function
    DependsOn: SessionFunctionLogGroup
    Properties:
      FunctionName: !Sub "BAV-Session-${AWS::StackName}"
      DeploymentPreference:
        Type: !Ref LambdaDeploymentPreference
        Role: !GetAtt CodeDeployServiceRole.Arn
        Alarms: !If
          - UseCanaryDeploymentAlarms
          - [!Ref SessionFunctionFatalErrorAlarm, !Ref SessionFunctionCanary5xxErrors, !Ref SessionFunctionLambdaErrors]
          - [!Ref AWS::NoValue]
      Handler: SessionHandler.lambdaHandler
      CodeUri: ../src/
      ReservedConcurrentExecutions: !If
        - ApplyReservedConcurrency
        - !Ref LambdaConcurrency
        - !Ref AWS::NoValue
      Environment:
        Variables:
          AUTH_SESSION_TTL_SECS:
            !FindInMap [ EnvironmentVariables, !Ref Environment, AUTHSESSIONTTLSECS ]
          POWERTOOLS_SERVICE_NAME: SessionHandler
          KMS_KEY_ARN:
            Fn::ImportValue: !Sub "${L2KMSStackName}-vc-signing-key"
          CLIENT_CONFIG:
            !FindInMap [ EnvironmentVariables, !Ref Environment, CLIENTS ]
          ENCRYPTION_KEY_IDS:
            Fn::ImportValue: !Sub "${L2KMSStackName}-encryption-key"
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSXrayWriteOnlyAccess
        - DynamoDBWritePolicy:
            TableName:
              Fn::ImportValue: !Sub "${L2DynamoStackName}-session-table-name"
        - DynamoDBWritePolicy:
            TableName:
              Fn::ImportValue: !Sub "${L2DynamoStackName}-person-identity-table-name"
        - DynamoDBReadPolicy:
            TableName:
              Fn::ImportValue: !Sub "${L2DynamoStackName}-session-table-name"
        - KMSDecryptPolicy:
            KeyId:
              Fn::ImportValue: !Sub "${L2DynamoStackName}-session-table-key-id"
        - Statement:
            - Sid: KMSPolicy
              Effect: Allow
              Action:
                - kms:*
              Resource:
                "*"
        - Statement:
            - Effect: Allow
              Action:
                - "sqs:SendMessage"
              Resource: !GetAtt TxMASQSQueue.Arn
            - Effect: Allow
              Action:
                - "kms:Encrypt"
                - "kms:Decrypt"
                - "kms:GenerateDataKey"
              Resource: !GetAtt TxMAKMSEncryptionKey.Arn
      Events:
        session:
          Type: Api
          Properties:
            Path: /session
            Method: post
            RestApiId: !Ref BAVRestApi

    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: false
        EntryPoints:
          - SessionHandler.ts

  SessionFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/BAV-Session-${AWS::StackName}"
      RetentionInDays:
        !FindInMap [
          EnvironmentConfiguration,
          !Ref Environment,
          logretentionindays,
        ]

  SessionFunctionLogsSubscriptionFilterCSLS:
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn:
        !FindInMap [ PlatformConfiguration, !Ref Environment, CSLSEGRESS ]
      FilterPattern: ""
      LogGroupName: !Ref SessionFunctionLogGroup

  SessionFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref SessionFunction
      Principal: apigateway.amazonaws.com

  SessionFunctionFatalErorMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref SessionFunctionLogGroup
      FilterPattern: '{ $.level = "FATAL" || $.message = "Unhandled Exception:*" }'
      MetricTransformations:
        -
          MetricValue: "1"
          MetricNamespace: !Sub "${AWS::StackName}/LogMessages"
          MetricName: "SessionFunction-Fatalerror"

  SessionFunctionFatalErrorAlarm:
    DependsOn:
      - "SessionFunctionFatalErorMetricFilter"
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub "${AWS::StackName}-SessionFunction-FatalErrorAlarm"
      AlarmDescription: !Sub "Trigger an alarm when Fatal Error occurs. ${SupportManualURL}"
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      AlarmActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      InsufficientDataActions: [ ]
      MetricName: SessionFunction-Fatalerror
      Namespace: !Sub "${AWS::StackName}/LogMessages"
      Statistic: Sum
      Dimensions: [ ]
      Period: 60
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  SessionFunctionLambdaErrors:
    Type: AWS::CloudWatch::Alarm
    Condition: UseCanaryDeploymentAlarms
    Properties:
      AlarmName: !Sub "${AWS::StackName}-SessionFunctionLambdaErrors"
      AlarmDescription: !Sub "Trigger an alarm when lambda errors occurs. ${SupportManualURL}"
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      OKActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      InsufficientDataActions: []
      MetricName: Errors
      Namespace: AWS/Lambda
      Statistic: Sum
      Dimensions:
        - Name: Resource
          Value: !Sub "${AWS::StackName}-SessionFunction:live"
        - Name: ExecutedVersion
          Value: !Sub SessionFunction.Version.Version
      Period: 60
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching

  SessionFunctionCanary5xxErrors:
    Type: AWS::CloudWatch::Alarm
    Condition: UseCanaryDeploymentAlarms
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      OKActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      AlarmName: !Sub "${AWS::StackName}-SessionFunctionCanary5xxErrors"
      AlarmDescription: !Sub "SessionFunction Lambda returning 5xx response."
      Namespace: AWS/ApiGateway
      MetricName: 5XXError
      Dimensions:
        - Name: Method
          Value: POST
        - Name: ApiName
          Value: !Sub "${AWS::StackName} - BAV Credential Issuer Private API"
        - Name: Stage
          Value: !Ref Environment
        - Name: Resource
          Value: /session
      Statistic: Sum
      Unit: Count
      Period: 60
      EvaluationPeriods: 3
      DatapointsToAlarm: 2
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  VerifyAuthorizeRequestMessageCodeMetricFilter:
    Type: AWS::Logs::MetricFilter
    Condition: DeployAlarms
    Properties:
      LogGroupName: !Ref SessionFunctionLogGroup
      FilterPattern: "{ $.messageCode =* }"
      MetricTransformations:
        - MetricValue: "1"
          MetricNamespace: !Sub "${AWS::StackName}/LogMessages"
          MetricName: "VerifyAuthorizeRequest-lambda-messageCode"
          Dimensions:
            - Key: MessageCode
              Value: $.messageCode

  VerifyAuthorizeRequestFailedVerifyingJwtLowThresholdAlarm:
    DependsOn:
      - "VerifyAuthorizeRequestMessageCodeMetricFilter"
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub "${AWS::StackName}-VerifyAuthorizeRequestFailedVerifyingJwtAlarm"
      AlarmDescription: !Sub "There has been an error verifying the JWT using the RP's public key. This is likely an issue with the RP. ${SupportManualURL}"
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      AlarmActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      InsufficientDataActions: [ ]
      Dimensions: [ ]
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: error
          ReturnData: true
          MetricStat:
            Metric:
              Namespace: !Sub "${AWS::StackName}/LogMessages"
              MetricName: VerifyAuthorizeRequest-lambda-messageCode
              Dimensions:
                - Name: MessageCode
                  Value: BAV_FAILED_VERIFYING_JWT
            Period: 60
            Stat: Sum

  VerifyAuthorizeRequestFailedVerifyingJwtCriticalAlarm:
    DependsOn:
      - "VerifyAuthorizeRequestMessageCodeMetricFilter"
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub "${AWS::StackName}-VerifyAuthorizeRequestFailedVerifyingJwtCriticalAlarm"
      AlarmDescription: !Sub "There has been an error verifying the JWT using the RP's public key. This is likely an issue with the RP. ${SupportManualURL}"
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      AlarmActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      InsufficientDataActions: [ ]
      Dimensions: [ ]
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 10
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: error
          ReturnData: true
          MetricStat:
            Metric:
              Namespace: !Sub "${AWS::StackName}/LogMessages"
              MetricName: VerifyAuthorizeRequest-lambda-messageCode
              Dimensions:
                - Name: MessageCode
                  Value: BAV_FAILED_VERIFYING_JWT
            Period: 300
            Stat: Sum

  SessionConcurrency80Alarm:
    Type: AWS::CloudWatch::Alarm
    Condition: "ApplyReservedConcurrency"
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-topic-critical-alert
      OKActions:
        - !ImportValue platform-alarm-topic-critical-alert
      InsufficientDataActions: []
      AlarmDescription: !Sub "Trigger the alarm if over 80% of Session is used. ${SupportManualURL}"
      AlarmName: !Sub "${AWS::StackName}-SessionFunction-concurrency"
      MetricName: ConcurrentExecutions
      Namespace: AWS/Lambda
      Dimensions:
        - Name: FunctionName
          Value: !Ref SessionFunction
      Statistic: Maximum
      Period: 60 # This is the minimum value for the AWS Namespace
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: !Ref LambdaConcurrencyThreshold
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching

  SessionThrottleAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-topic-critical-alert
      OKActions:
        - !ImportValue platform-alarm-topic-critical-alert
      InsufficientDataActions: []
      AlarmDescription: !Sub "Trigger if the ${SessionFunction} lambda throttles. ${SupportManualURL}"
      AlarmName: !Sub "${AWS::StackName}-SessionFunction-throttles"
      MetricName: Throttles
      Namespace: AWS/Lambda
      Statistic: Sum
      Dimensions:
        - Name: FunctionName
          Value: !Ref SessionFunction
      TreatMissingData: notBreaching
      Period: 60 # This is the minimum value for the AWS Namespace
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold

  Session5XXApiGwErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub "${AWS::StackName}-Session5XXApiGwErrorAlarm"
      AlarmDescription: !Sub "There has been a small proportion of 5XX errors on the Session endpoint. ${SupportManualURL}"
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      AlarmActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      InsufficientDataActions: [ ]
      Dimensions: [ ]
      EvaluationPeriods: 5
      DatapointsToAlarm: 2
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations<4 || error<2,0,errorPercentage)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub "${AWS::StackName} - BAV Credential Issuer Private API"
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /session
            Period: 60
            Stat: Sum
        - Id: errorPercentage
          Label: errorPercentage
          ReturnData: false
          Expression: (error/invocations)*100
        - Id: error
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub "${AWS::StackName} - BAV Credential Issuer Private API"
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /session
            Period: 60
            Stat: Sum

  Session5XXApiGwErrorCriticalAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub "${AWS::StackName}-Session5XXApiGwErrorCriticalAlarm"
      AlarmDescription: !Sub "There has been a significant proportion of 5XX errors on the Session endpoint. ${SupportManualURL}"
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-pagerduty-alert-topic
        - !ImportValue platform-alarm-topic-critical-alert
      AlarmActions:
        - !ImportValue platform-alarm-pagerduty-alert-topic
        - !ImportValue platform-alarm-topic-critical-alert
      InsufficientDataActions: [ ]
      Dimensions: [ ]
      EvaluationPeriods: 5
      DatapointsToAlarm: 2
      Threshold: 80
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations<10,0,errorPercentage)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub "${AWS::StackName} - BAV Credential Issuer Private API"
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /session
            Period: 60
            Stat: Sum
        - Id: errorPercentage
          Label: errorPercentage
          ReturnData: false
          Expression: (error/invocations)*100
        - Id: error
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub "${AWS::StackName} - BAV Credential Issuer Private API"
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /session
            Period: 60
            Stat: Sum

  Session4XXApiGwErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub "${AWS::StackName}-Session4XXApiGwErrorAlarm"
      AlarmDescription: !Sub "There has been a small proportion of 4XX errors on the Session endpoint. ${SupportManualURL}"
      ActionsEnabled: false   # alarm reviewed in production and decision made to disable
      OKActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      AlarmActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      InsufficientDataActions: [ ]
      Dimensions: [ ]
      EvaluationPeriods: 5
      DatapointsToAlarm: 2
      Threshold: 10
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations<3 || error<2,0,errorPercentage)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: ApiName
                  Value: !Sub "${AWS::StackName} - BAV Credential Issuer Private API"
                - Name: Resource
                  Value: /session
                - Name: Stage
                  Value: !Ref Environment
                - Name: Method
                  Value: POST
            Period: 60
            Stat: Sum
        - Id: errorPercentage
          Label: errorPercentage
          ReturnData: false
          Expression: (error/invocations)*100
        - Id: error
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 4XXError
              Dimensions:
                - Name: ApiName
                  Value: !Sub "${AWS::StackName} - BAV Credential Issuer Private API"
                - Name: Resource
                  Value: /session
                - Name: Stage
                  Value: !Ref Environment
                - Name: Method
                  Value: POST
            Period: 60
            Stat: Sum
  ## AbortHandler
  AbortFunction:
    Type: AWS::Serverless::Function
    DependsOn: AbortFunctionLogGroup
    Properties:
      FunctionName: !Sub "BAV-Abort-${AWS::StackName}"
      DeploymentPreference:
        Type: !Ref LambdaDeploymentPreference
        Role: !GetAtt CodeDeployServiceRole.Arn
        Alarms: !If
          - UseCanaryDeploymentAlarms
          - [!Ref AbortFunctionFatalErrorAlarm, !Ref AbortFunctionLambdaErrors, !Ref AbortFunctionCanary5xxErrors]
          - [!Ref AWS::NoValue]
      Handler: AbortHandler.lambdaHandler
      CodeUri: ../src/
      ReservedConcurrentExecutions: !If
        - ApplyReservedConcurrency
        - !Ref LambdaConcurrency
        - !Ref AWS::NoValue
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: AbortHandler
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSXrayWriteOnlyAccess
        - DynamoDBWritePolicy:
            TableName:
              Fn::ImportValue: !Sub "${L2DynamoStackName}-session-table-name"
        - DynamoDBReadPolicy:
            TableName:
              Fn::ImportValue: !Sub "${L2DynamoStackName}-session-table-name"
        - KMSDecryptPolicy:
            KeyId:
              Fn::ImportValue: !Sub "${L2DynamoStackName}-session-table-key-id"
        - Statement:
            - Sid: KMSPolicy
              Effect: Allow
              Action:
                - kms:*
              Resource:
                "*"
        - Statement:
            - Effect: Allow
              Action:
                - "sqs:SendMessage"
              Resource: !GetAtt TxMASQSQueue.Arn
            - Effect: Allow
              Action:
                - "kms:Encrypt"
                - "kms:Decrypt"
                - "kms:GenerateDataKey"
              Resource: !GetAtt TxMAKMSEncryptionKey.Arn
      Events:
        abort:
          Type: Api
          Properties:
            Path: /abort
            Method: post
            RestApiId: !Ref BAVRestApi

    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: false
        EntryPoints:
          - AbortHandler.ts

  AbortFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/BAV-Abort-${AWS::StackName}"
      RetentionInDays:
        !FindInMap [
          EnvironmentConfiguration,
          !Ref Environment,
          logretentionindays,
        ]

  AbortFunctionLogsSubscriptionFilterCSLS:
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn:
        !FindInMap [ PlatformConfiguration, !Ref Environment, CSLSEGRESS ]
      FilterPattern: ""
      LogGroupName: !Ref AbortFunctionLogGroup

  AbortFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref AbortFunction
      Principal: apigateway.amazonaws.com

  AbortFunctionFatalErorMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref AbortFunctionLogGroup
      FilterPattern: '{ $.level = "FATAL" || $.message = "Unhandled Exception:*" }'
      MetricTransformations:
        -
          MetricValue: "1"
          MetricNamespace: !Sub "${AWS::StackName}/LogMessages"
          MetricName: "AbortFunction-Fatalerror"

  AbortFunctionFatalErrorAlarm:
    DependsOn:
      - "AbortFunctionFatalErorMetricFilter"
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub "${AWS::StackName}-AbortFunction-FatalErrorAlarm"
      AlarmDescription: !Sub "Trigger an alarm when Fatal Error occurs. ${SupportManualURL}"
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      AlarmActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      InsufficientDataActions: [ ]
      MetricName: AbortFunction-Fatalerror
      Namespace: !Sub "${AWS::StackName}/LogMessages"
      Statistic: Sum
      Dimensions: [ ]
      Period: 60
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  AbortFunctionLambdaErrors:
    Type: AWS::CloudWatch::Alarm
    Condition: UseCanaryDeploymentAlarms
    Properties:
      AlarmName: !Sub "${AWS::StackName}-AbortFunctionLambdaErrors"
      AlarmDescription: !Sub "Trigger an alarm when lambda errors occurs. ${SupportManualURL}"
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      OKActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      InsufficientDataActions: []
      MetricName: Errors
      Namespace: AWS/Lambda
      Statistic: Sum
      Dimensions:
        - Name: Resource
          Value: !Sub "${AWS::StackName}-AbortFunction:live"
        - Name: ExecutedVersion
          Value: !Sub AbortFunction.Version.Version
      Period: 60
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching

  AbortFunctionCanary5xxErrors:
    Type: AWS::CloudWatch::Alarm
    Condition: UseCanaryDeploymentAlarms
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      OKActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      AlarmName: !Sub "${AWS::StackName}-AbortFunctionCanary5xxErrors"
      AlarmDescription: !Sub "AbortFunction Lambda returning 5xx response."
      Namespace: AWS/ApiGateway
      MetricName: 5XXError
      Dimensions:
        - Name: Method
          Value: POST
        - Name: ApiName
          Value: !Sub "${AWS::StackName} - BAV Credential Issuer Private API"
        - Name: Stage
          Value: !Ref Environment
        - Name: Resource
          Value: /abort
      Statistic: Sum
      Unit: Count
      Period: 60
      EvaluationPeriods: 3
      DatapointsToAlarm: 2
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  AbortConcurrency80Alarm:
    Type: AWS::CloudWatch::Alarm
    Condition: "ApplyReservedConcurrency"
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-topic-critical-alert
      OKActions:
        - !ImportValue platform-alarm-topic-critical-alert
      InsufficientDataActions: []
      AlarmDescription: !Sub "Trigger the alarm if over 80% of Abort is used. ${SupportManualURL}"
      AlarmName: !Sub "${AWS::StackName}-AbortFunction-concurrency"
      MetricName: ConcurrentExecutions
      Namespace: AWS/Lambda
      Dimensions:
        - Name: FunctionName
          Value: !Ref AbortFunction
      Statistic: Maximum
      Period: 60 # This is the minimum value for the AWS Namespace
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: !Ref LambdaConcurrencyThreshold
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching

  AbortThrottleAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-topic-critical-alert
      OKActions:
        - !ImportValue platform-alarm-topic-critical-alert
      InsufficientDataActions: []
      AlarmDescription: !Sub "Trigger if the ${AbortFunction} lambda throttles. ${SupportManualURL}"
      AlarmName: !Sub "${AWS::StackName}-AbortFunction-throttles"
      MetricName: Throttles
      Namespace: AWS/Lambda
      Statistic: Sum
      Dimensions:
        - Name: FunctionName
          Value: !Ref AbortFunction
      TreatMissingData: notBreaching
      Period: 60 # This is the minimum value for the AWS Namespace
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold

  Abort5XXApiGwErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub "${AWS::StackName}-Abort5XXApiGwErrorAlarm"
      AlarmDescription: !Sub "There has been a small proportion of 5XX errors on the Abort endpoint. ${SupportManualURL}"
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      AlarmActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      InsufficientDataActions: [ ]
      Dimensions: [ ]
      EvaluationPeriods: 5
      DatapointsToAlarm: 2
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations<4 || error<2,0,errorPercentage)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub "${AWS::StackName} - BAV Credential Issuer Private API"
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /abort
            Period: 60
            Stat: Sum
        - Id: errorPercentage
          Label: errorPercentage
          ReturnData: false
          Expression: (error/invocations)*100
        - Id: error
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub "${AWS::StackName} - BAV Credential Issuer Private API"
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /abort
            Period: 60
            Stat: Sum

  Abort5XXApiGwErrorCriticalAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub "${AWS::StackName}-Abort5XXApiGwErrorCriticalAlarm"
      AlarmDescription: !Sub "There has been a significant proportion of 5XX errors on the Abort endpoint. ${SupportManualURL}"
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-topic-critical-alert
      AlarmActions:
        - !ImportValue platform-alarm-topic-critical-alert
      InsufficientDataActions: [ ]
      Dimensions: [ ]
      EvaluationPeriods: 5
      DatapointsToAlarm: 2
      Threshold: 80
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations<10,0,errorPercentage)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub "${AWS::StackName} - BAV Credential Issuer Private API"
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /abort
            Period: 60
            Stat: Sum
        - Id: errorPercentage
          Label: errorPercentage
          ReturnData: false
          Expression: (error/invocations)*100
        - Id: error
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub "${AWS::StackName} - BAV Credential Issuer Private API"
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /abort
            Period: 60
            Stat: Sum

  Abort4XXApiGwErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub "${AWS::StackName}-Abort4XXApiGwErrorAlarm"
      AlarmDescription: !Sub "There has been a small proportion of 4XX errors on the Abort endpoint. ${SupportManualURL}"
      ActionsEnabled: false   # alarm reviewed in production and decision made to disable
      OKActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      AlarmActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      InsufficientDataActions: [ ]
      Dimensions: [ ]
      EvaluationPeriods: 5
      DatapointsToAlarm: 2
      Threshold: 10
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations<3 || error<2,0,errorPercentage)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: ApiName
                  Value: !Sub "${AWS::StackName} - BAV Credential Issuer Private API"
                - Name: Resource
                  Value: /abort
                - Name: Stage
                  Value: !Ref Environment
                - Name: Method
                  Value: POST
            Period: 60
            Stat: Sum
        - Id: errorPercentage
          Label: errorPercentage
          ReturnData: false
          Expression: (error/invocations)*100
        - Id: error
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 4XXError
              Dimensions:
                - Name: ApiName
                  Value: !Sub "${AWS::StackName} - BAV Credential Issuer Private API"
                - Name: Resource
                  Value: /abort
                - Name: Stage
                  Value: !Ref Environment
                - Name: Method
                  Value: POST
            Period: 60
            Stat: Sum

  ## PersonInfoHandler
  PersonInfoFunction:
    Type: AWS::Serverless::Function
    DependsOn: PersonInfoFunctionLogGroup
    Properties:
      FunctionName: !Sub "BAV-person-info-${AWS::StackName}"
      DeploymentPreference:
        Type: !Ref LambdaDeploymentPreference
        Role: !GetAtt CodeDeployServiceRole.Arn
        Alarms: !If
          - UseCanaryDeploymentAlarms
          - [!Ref PersonInfoFunctionFatalErrorAlarm, !Ref PersonInfoFunctionCanary5xxErrors, !Ref PersonInfoFunctionLambdaErrors]
          - [!Ref AWS::NoValue]
      Handler: PersonInfoHandler.lambdaHandler
      CodeUri: ../src/
      ReservedConcurrentExecutions: !If
        - ApplyReservedConcurrency
        - !Ref LambdaConcurrency
        - !Ref AWS::NoValue
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: PersonInfoHandler
          PUBLIC_KEY_SSM_PATH: !Sub "/${Environment}/person-info/PUBLIC_KEY"
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSXrayWriteOnlyAccess
        - SSMParameterReadPolicy:
            ParameterName: !Sub "${Environment}/person-info/PUBLIC_KEY"
        - DynamoDBReadPolicy:
            TableName:
              Fn::ImportValue: !Sub "${L2DynamoStackName}-person-identity-table-name"
        - DynamoDBReadPolicy:
            TableName:
              Fn::ImportValue: !Sub "${L2DynamoStackName}-session-table-name"
        - KMSDecryptPolicy:
            KeyId:
              Fn::ImportValue: !Sub "${L2DynamoStackName}-person-identity-table-key-id"
        - KMSDecryptPolicy:
            KeyId:
              Fn::ImportValue: !Sub "${L2DynamoStackName}-session-table-key-id"
        - Statement:
            - Sid: KMSPolicy
              Effect: Allow
              Action:
                - kms:*
              Resource:
                "*"
      Events:
        personInfo:
          Type: Api
          Properties:
            Path: /person-info
            Method: get
            RestApiId: !Ref BAVRestApi

    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: false
        EntryPoints:
          - PersonInfoHandler.ts

  PersonInfoFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/BAV-person-info-${AWS::StackName}"
      RetentionInDays:
        !FindInMap [
          EnvironmentConfiguration,
          !Ref Environment,
          logretentionindays,
        ]

  PersonInfoFunctionLogsSubscriptionFilterCSLS:
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn:
        !FindInMap [ PlatformConfiguration, !Ref Environment, CSLSEGRESS ]
      FilterPattern: ""
      LogGroupName: !Ref PersonInfoFunctionLogGroup

  PersonInfoFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref PersonInfoFunction
      Principal: apigateway.amazonaws.com

  PersonInfoFunctionFatalErorMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref PersonInfoFunctionLogGroup
      FilterPattern: '{ $.level = "FATAL" || $.message = "Unhandled Exception:*" }'
      MetricTransformations:
        -
          MetricValue: "1"
          MetricNamespace: !Sub "${AWS::StackName}/LogMessages"
          MetricName: "PersonInfoFunction-Fatalerror"

  PersonInfoFunctionFatalErrorAlarm:
    DependsOn:
      - "PersonInfoFunctionFatalErorMetricFilter"
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub "${AWS::StackName}-PersonInfoFunction-FatalErrorAlarm"
      AlarmDescription: !Sub "Trigger an alarm when Fatal Error occurs. ${SupportManualURL}"
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      AlarmActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      InsufficientDataActions: [ ]
      MetricName: PersonInfoFunction-Fatalerror
      Namespace: !Sub "${AWS::StackName}/LogMessages"
      Statistic: Sum
      Dimensions: [ ]
      Period: 60
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  PersonInfoFunctionLambdaErrors:
    Type: AWS::CloudWatch::Alarm
    Condition: UseCanaryDeploymentAlarms
    Properties:
      AlarmName: !Sub "${AWS::StackName}-PersonInfoFunctionLambdaErrors"
      AlarmDescription: !Sub "Trigger an alarm when lambda errors occurs. ${SupportManualURL}"
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      OKActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      InsufficientDataActions: []
      MetricName: Errors
      Namespace: AWS/Lambda
      Statistic: Sum
      Dimensions:
        - Name: Resource
          Value: !Sub "${AWS::StackName}-PersonInfoFunction:live"
        - Name: ExecutedVersion
          Value: !Sub PersonInfoFunction.Version.Version
      Period: 60
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching

  PersonInfoConcurrency80Alarm:
    Type: AWS::CloudWatch::Alarm
    Condition: "ApplyReservedConcurrency"
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-topic-critical-alert
      OKActions:
        - !ImportValue platform-alarm-topic-critical-alert
      InsufficientDataActions: []
      AlarmDescription: !Sub "Trigger the alarm if over 80% of PersonInfo is used. ${SupportManualURL}"
      AlarmName: !Sub "${AWS::StackName}-PersonInfoFunction-concurrency"
      MetricName: ConcurrentExecutions
      Namespace: AWS/Lambda
      Dimensions:
        - Name: FunctionName
          Value: !Ref PersonInfoFunction
      Statistic: Maximum
      Period: 60 # This is the minimum value for the AWS Namespace
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: !Ref LambdaConcurrencyThreshold
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching

  PersonInfoFunctionCanary5xxErrors:
    Type: AWS::CloudWatch::Alarm
    Condition: UseCanaryDeploymentAlarms
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      OKActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      AlarmName: !Sub "${AWS::StackName}-PersonInfoFunctionCanary5xxErrors"
      AlarmDescription: !Sub "PersonInfoFunction Lambda returning 5xx response."
      Namespace: AWS/ApiGateway
      MetricName: 5XXError
      Dimensions:
        - Name: Method
          Value: GET
        - Name: ApiName
          Value: !Sub "${AWS::StackName} - BAV Credential Issuer Private API"
        - Name: Stage
          Value: !Ref Environment
        - Name: Resource
          Value: /person-info
      Statistic: Sum
      Unit: Count
      Period: 60
      EvaluationPeriods: 3
      DatapointsToAlarm: 2
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  PersonInfoThrottleAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-topic-critical-alert
      OKActions:
        - !ImportValue platform-alarm-topic-critical-alert
      InsufficientDataActions: []
      AlarmDescription: !Sub "Trigger if the ${PersonInfoFunction} lambda throttles. ${SupportManualURL}"
      AlarmName: !Sub "${AWS::StackName}-PersonInfoFunction-throttles"
      MetricName: Throttles
      Namespace: AWS/Lambda
      Statistic: Sum
      Dimensions:
        - Name: FunctionName
          Value: !Ref PersonInfoFunction
      TreatMissingData: notBreaching
      Period: 60 # This is the minimum value for the AWS Namespace
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold

  PersonInfo5XXApiGwErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub "${AWS::StackName}-PersonInfo5XXApiGwErrorAlarm"
      AlarmDescription: !Sub "There has been a small proportion of 5XX errors on the PersonInfo endpoint. ${SupportManualURL}"
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      AlarmActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      InsufficientDataActions: [ ]
      Dimensions: [ ]
      EvaluationPeriods: 5
      DatapointsToAlarm: 2
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations<4 || error<2,0,errorPercentage)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub "${AWS::StackName} - BAV Credential Issuer Private API"
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /person-info
            Period: 60
            Stat: Sum
        - Id: errorPercentage
          Label: errorPercentage
          ReturnData: false
          Expression: (error/invocations)*100
        - Id: error
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub "${AWS::StackName} - BAV Credential Issuer Private API"
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /person-info
            Period: 60
            Stat: Sum

  PersonInfo5XXApiGwErrorCriticalAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub "${AWS::StackName}-PersonInfo5XXApiGwErrorCriticalAlarm"
      AlarmDescription: !Sub "There has been a significant proportion of 5XX errors on the PersonInfo endpoint. ${SupportManualURL}"
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-topic-critical-alert
      AlarmActions:
        - !ImportValue platform-alarm-topic-critical-alert
      InsufficientDataActions: [ ]
      Dimensions: [ ]
      EvaluationPeriods: 5
      DatapointsToAlarm: 2
      Threshold: 80
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations<10,0,errorPercentage)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub "${AWS::StackName} - BAV Credential Issuer Private API"
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /person-info
            Period: 60
            Stat: Sum
        - Id: errorPercentage
          Label: errorPercentage
          ReturnData: false
          Expression: (error/invocations)*100
        - Id: error
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub "${AWS::StackName} - BAV Credential Issuer Private API"
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /person-info
            Period: 60
            Stat: Sum

  PersonInfo4XXApiGwErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub "${AWS::StackName}-PersonInfo4XXApiGwErrorAlarm"
      AlarmDescription: !Sub "There has been a small proportion of 4XX errors on the PersonInfo endpoint. ${SupportManualURL}"
      ActionsEnabled: false   # alarm reviewed in production and decision made to disable
      OKActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      AlarmActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      InsufficientDataActions: [ ]
      Dimensions: [ ]
      EvaluationPeriods: 5
      DatapointsToAlarm: 2
      Threshold: 10
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations<3 || error<2,0,errorPercentage)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: ApiName
                  Value: !Sub "${AWS::StackName} - BAV Credential Issuer Private API"
                - Name: Resource
                  Value: /person-info
                - Name: Stage
                  Value: !Ref Environment
                - Name: Method
                  Value: GET
            Period: 60
            Stat: Sum
        - Id: errorPercentage
          Label: errorPercentage
          ReturnData: false
          Expression: (error/invocations)*100
        - Id: error
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 4XXError
              Dimensions:
                - Name: ApiName
                  Value: !Sub "${AWS::StackName} - BAV Credential Issuer Private API"
                - Name: Resource
                  Value: /person-info
                - Name: Stage
                  Value: !Ref Environment
                - Name: Method
                  Value: GET
            Period: 60
            Stat: Sum

  ## PersonInfoKeyHandler
  PersonInfoKeyFunction:
    Type: AWS::Serverless::Function
    DependsOn: PersonInfoKeyFunctionLogGroup
    Properties:
      FunctionName: !Sub "BAV-Person-Info-Key-${AWS::StackName}"
      DeploymentPreference:
        Type: !Ref LambdaDeploymentPreference
        Role: !GetAtt CodeDeployServiceRole.Arn
        Alarms: !If
          - UseCanaryDeploymentAlarms
          - [!Ref PersonInfoKeyFunctionFatalErrorAlarm, !Ref PersonInfoKeyFunctionCanary5xxErrors, !Ref PersonInfoKeyFunctionLambdaErrors]
          - [!Ref AWS::NoValue]
      Handler: PersonInfoKeyHandler.lambdaHandler
      CodeUri: ../src/
      ReservedConcurrentExecutions: !If
        - ApplyReservedConcurrency
        - !Ref LambdaConcurrency
        - !Ref AWS::NoValue
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: PersonInfoKeyHandler
          PRIVATE_KEY_SSM_PATH: !Sub "/${Environment}/person-info/PRIVATE_KEY"
          KMS_KEY_ARN:
            Fn::ImportValue: !Sub "${L2KMSStackName}-vc-signing-key"
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSXrayWriteOnlyAccess
        - SSMParameterReadPolicy:
            ParameterName: !Sub "${Environment}/person-info/PRIVATE_KEY"
      Events:
        personInfoKey:
          Type: Api
          Properties:
            Path: /person-info-key
            Method: get
            RestApiId: !Ref BAVRestApi

    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: false
        EntryPoints:
          - PersonInfoKeyHandler.ts

  PersonInfoKeyFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/BAV-Person-Info-Key-${AWS::StackName}"
      RetentionInDays:
        !FindInMap [
          EnvironmentConfiguration,
          !Ref Environment,
          logretentionindays,
        ]

  PersonInfoKeyFunctionLogsSubscriptionFilterCSLS:
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn:
        !FindInMap [ PlatformConfiguration, !Ref Environment, CSLSEGRESS ]
      FilterPattern: ""
      LogGroupName: !Ref PersonInfoKeyFunctionLogGroup

  PersonInfoKeyFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref PersonInfoKeyFunction
      Principal: apigateway.amazonaws.com

  PersonInfoKeyFunctionFatalErorMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref PersonInfoKeyFunctionLogGroup
      FilterPattern: '{ $.level = "FATAL" || $.message = "Unhandled Exception:*" }'
      MetricTransformations:
        -
          MetricValue: "1"
          MetricNamespace: !Sub "${AWS::StackName}/LogMessages"
          MetricName: "PersonInfoKeyFunction-Fatalerror"

  PersonInfoKeyFunctionFatalErrorAlarm:
    DependsOn:
      - "PersonInfoKeyFunctionFatalErorMetricFilter"
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub "${AWS::StackName}-PersonInfoKeyFunction-FatalErrorAlarm"
      AlarmDescription: !Sub "Trigger an alarm when Fatal Error occurs. ${SupportManualURL}"
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      AlarmActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      InsufficientDataActions: [ ]
      MetricName: PersonInfoKeyFunction-Fatalerror
      Namespace: !Sub "${AWS::StackName}/LogMessages"
      Statistic: Sum
      Dimensions: [ ]
      Period: 60
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  PersonInfoKeyFunctionLambdaErrors:
    Type: AWS::CloudWatch::Alarm
    Condition: UseCanaryDeploymentAlarms
    Properties:
      AlarmName: !Sub "${AWS::StackName}-PersonInfoKeyFunctionLambdaErrors"
      AlarmDescription: !Sub "Trigger an alarm when lambda errors occurs. ${SupportManualURL}"
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      OKActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      InsufficientDataActions: []
      MetricName: Errors
      Namespace: AWS/Lambda
      Statistic: Sum
      Dimensions:
        - Name: Resource
          Value: !Sub "${AWS::StackName}-PersonInfoKeyFunction:live"
        - Name: ExecutedVersion
          Value: !Sub PersonInfoKeyFunction.Version.Version
      Period: 60
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching

  PersonInfoKeyFunctionCanary5xxErrors:
    Type: AWS::CloudWatch::Alarm
    Condition: UseCanaryDeploymentAlarms
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      OKActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      AlarmName: !Sub "${AWS::StackName}-PersonInfoKeyFunctionCanary5xxErrors"
      AlarmDescription: !Sub "PersonInfoKeyFunction Lambda returning 5xx response."
      Namespace: AWS/ApiGateway
      MetricName: 5XXError
      Dimensions:
        - Name: Method
          Value: GET
        - Name: ApiName
          Value: !Sub "${AWS::StackName} - BAV Credential Issuer Private API"
        - Name: Stage
          Value: !Ref Environment
        - Name: Resource
          Value: /person-info
      Statistic: Sum
      Unit: Count
      Period: 60
      EvaluationPeriods: 3
      DatapointsToAlarm: 2
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  PersonInfoKeyConcurrency80Alarm:
    Type: AWS::CloudWatch::Alarm
    Condition: "ApplyReservedConcurrency"
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-topic-critical-alert
      OKActions:
        - !ImportValue platform-alarm-topic-critical-alert
      InsufficientDataActions: []
      AlarmDescription: !Sub "Trigger the alarm if over 80% of PersonInfoKey is used. ${SupportManualURL}"
      AlarmName: !Sub "${AWS::StackName}-PersonInfoKeyFunction-concurrency"
      MetricName: ConcurrentExecutions
      Namespace: AWS/Lambda
      Dimensions:
        - Name: FunctionName
          Value: !Ref PersonInfoKeyFunction
      Statistic: Maximum
      Period: 60 # This is the minimum value for the AWS Namespace
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: !Ref LambdaConcurrencyThreshold
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching

  PersonInfoKeyThrottleAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-topic-critical-alert
      OKActions:
        - !ImportValue platform-alarm-topic-critical-alert
      InsufficientDataActions: []
      AlarmDescription: !Sub "Trigger if the ${PersonInfoKeyFunction} lambda throttles. ${SupportManualURL}"
      AlarmName: !Sub "${AWS::StackName}-PersonInfoKeyFunction-throttles"
      MetricName: Throttles
      Namespace: AWS/Lambda
      Statistic: Sum
      Dimensions:
        - Name: FunctionName
          Value: !Ref PersonInfoKeyFunction
      TreatMissingData: notBreaching
      Period: 60 # This is the minimum value for the AWS Namespace
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold

  PersonInfoKey5XXApiGwErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub "${AWS::StackName}-PersonInfoKey5XXApiGwErrorAlarm"
      AlarmDescription: !Sub "There has been a small proportion of 5XX errors on the PersonInfoKey endpoint. ${SupportManualURL}"
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      AlarmActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      InsufficientDataActions: [ ]
      Dimensions: [ ]
      EvaluationPeriods: 5
      DatapointsToAlarm: 2
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations<4 || error<2,0,errorPercentage)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub "${AWS::StackName} - BAV Credential Issuer Private API"
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /person-info-key
            Period: 60
            Stat: Sum
        - Id: errorPercentage
          Label: errorPercentage
          ReturnData: false
          Expression: (error/invocations)*100
        - Id: error
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub "${AWS::StackName} - BAV Credential Issuer Private API"
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /person-info-key
            Period: 60
            Stat: Sum

  PersonInfoKey5XXApiGwErrorCriticalAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub "${AWS::StackName}-PersonInfoKey5XXApiGwErrorCriticalAlarm"
      AlarmDescription: !Sub "There has been a significant proportion of 5XX errors on the PersonInfoKey endpoint. ${SupportManualURL}"
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-topic-critical-alert
      AlarmActions:
        - !ImportValue platform-alarm-topic-critical-alert
      InsufficientDataActions: [ ]
      Dimensions: [ ]
      EvaluationPeriods: 5
      DatapointsToAlarm: 2
      Threshold: 80
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations<10,0,errorPercentage)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub "${AWS::StackName} - BAV Credential Issuer Private API"
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /person-info-key
            Period: 60
            Stat: Sum
        - Id: errorPercentage
          Label: errorPercentage
          ReturnData: false
          Expression: (error/invocations)*100
        - Id: error
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub "${AWS::StackName} - BAV Credential Issuer Private API"
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /person-info-key
            Period: 60
            Stat: Sum

  PersonInfoKey4XXApiGwErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub "${AWS::StackName}-PersonInfoKey4XXApiGwErrorAlarm"
      AlarmDescription: !Sub "There has been a small proportion of 4XX errors on the PersonInfoKey endpoint. ${SupportManualURL}"
      ActionsEnabled: false   # alarm reviewed in production and decision made to disable
      OKActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      AlarmActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      InsufficientDataActions: [ ]
      Dimensions: [ ]
      EvaluationPeriods: 5
      DatapointsToAlarm: 2
      Threshold: 10
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations<3 || error<2,0,errorPercentage)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: ApiName
                  Value: !Sub "${AWS::StackName} - BAV Credential Issuer Private API"
                - Name: Resource
                  Value: /person-info-key
                - Name: Stage
                  Value: !Ref Environment
                - Name: Method
                  Value: GET
            Period: 60
            Stat: Sum
        - Id: errorPercentage
          Label: errorPercentage
          ReturnData: false
          Expression: (error/invocations)*100
        - Id: error
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 4XXError
              Dimensions:
                - Name: ApiName
                  Value: !Sub "${AWS::StackName} - BAV Credential Issuer Private API"
                - Name: Resource
                  Value: /person-info-key
                - Name: Stage
                  Value: !Ref Environment
                - Name: Method
                  Value: GET
            Period: 60
            Stat: Sum

  ## UserInfoHandler
  UserInfoFunction:
    Type: AWS::Serverless::Function
    DependsOn: UserInfoFunctionLogGroup
    Properties:
      FunctionName: !Sub "BAV-UserInfo-${AWS::StackName}"
      DeploymentPreference:
        Type: !Ref LambdaDeploymentPreference
        Role: !GetAtt CodeDeployServiceRole.Arn
        Alarms: !If
          - UseCanaryDeploymentAlarms
          - [!Ref UserInfoFunctionFatalErrorAlarm, !Ref UserInfoFunctionCanary5xxErrors, !Ref UserInfoFunctionLambdaErrors]
          - [!Ref AWS::NoValue]
      Handler: UserInfoHandler.lambdaHandler
      CodeUri: ../src/
      ReservedConcurrentExecutions: !If
        - ApplyReservedConcurrency
        - !Ref LambdaConcurrency
        - !Ref AWS::NoValue
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: UserInfoHandler
          KMS_KEY_ARN:
            Fn::ImportValue: !Sub "${L2KMSStackName}-vc-signing-key"
          CREDENTIAL_VENDOR_SSM_PATH: !Sub "/${Environment}/bav/vendor"
          DNSSUFFIX: !FindInMap [ EnvironmentVariables, !Ref Environment, DNSSUFFIX ]
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSXrayWriteOnlyAccess
        - SSMParameterReadPolicy:
            ParameterName: !Sub "${Environment}/bav/vendor"
        - DynamoDBWritePolicy:
            TableName:
              Fn::ImportValue: !Sub "${L2DynamoStackName}-session-table-name"
        - DynamoDBReadPolicy:
            TableName:
              Fn::ImportValue: !Sub "${L2DynamoStackName}-session-table-name"
        - DynamoDBReadPolicy:
            TableName:
              Fn::ImportValue: !Sub "${L2DynamoStackName}-person-identity-table-name"
        - KMSDecryptPolicy:
            KeyId:
              Fn::ImportValue: !Sub "${L2DynamoStackName}-session-table-key-id"
        - KMSDecryptPolicy:
            KeyId:
              Fn::ImportValue: !Sub "${L2DynamoStackName}-person-identity-table-key-id"
        - Statement:
            - Sid: KMSPolicy
              Effect: Allow
              Action:
                - kms:Verify
                - kms:Sign
              Resource:
                Fn::ImportValue: !Sub "${L2KMSStackName}-vc-signing-key"
        - Statement:
            - Effect: Allow
              Action:
                - "sqs:SendMessage"
              Resource: !GetAtt TxMASQSQueue.Arn
            - Effect: Allow
              Action:
                - "kms:Encrypt"
                - "kms:Decrypt"
                - "kms:GenerateDataKey"
              Resource: !GetAtt TxMAKMSEncryptionKey.Arn
      Events:
        userInfo:
          Type: Api
          Properties:
            Path: /userinfo
            Method: post
            RestApiId: !Ref BAVRestApi

    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: false
        EntryPoints:
          - UserInfoHandler.ts

  UserInfoFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/BAV-UserInfo-${AWS::StackName}"
      RetentionInDays:
        !FindInMap [
          EnvironmentConfiguration,
          !Ref Environment,
          logretentionindays,
        ]

  UserInfoFunctionLogsSubscriptionFilterCSLS:
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn:
        !FindInMap [ PlatformConfiguration, !Ref Environment, CSLSEGRESS ]
      FilterPattern: ""
      LogGroupName: !Ref UserInfoFunctionLogGroup

  UserInfoFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref UserInfoFunction
      Principal: apigateway.amazonaws.com

  UserInfoFunctionFatalErorMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref UserInfoFunctionLogGroup
      FilterPattern: '{ $.level = "FATAL" || $.message = "Unhandled Exception:*" }'
      MetricTransformations:
        -
          MetricValue: "1"
          MetricNamespace: !Sub "${AWS::StackName}/LogMessages"
          MetricName: "UserInfoFunction-Fatalerror"

  UserInfoFunctionFatalErrorAlarm:
    DependsOn:
      - "UserInfoFunctionFatalErorMetricFilter"
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub "${AWS::StackName}-UserInfoFunction-FatalErrorAlarm"
      AlarmDescription: !Sub "Trigger an alarm when Fatal Error occurs. ${SupportManualURL}"
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      AlarmActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      InsufficientDataActions: [ ]
      MetricName: UserInfoFunction-Fatalerror
      Namespace: !Sub "${AWS::StackName}/LogMessages"
      Statistic: Sum
      Dimensions: [ ]
      Period: 60
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  UserInfoFunctionLambdaErrors:
    Type: AWS::CloudWatch::Alarm
    Condition: UseCanaryDeploymentAlarms
    Properties:
      AlarmName: !Sub "${AWS::StackName}-UserInfoFunctionLambdaErrors"
      AlarmDescription: !Sub "Trigger an alarm when lambda errors occurs. ${SupportManualURL}"
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      OKActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      InsufficientDataActions: []
      MetricName: Errors
      Namespace: AWS/Lambda
      Statistic: Sum
      Dimensions:
        - Name: Resource
          Value: !Sub "${AWS::StackName}-UserInfoFunction:live"
        - Name: ExecutedVersion
          Value: !Sub UserInfoFunction.Version.Version
      Period: 60
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching

  UserInfoFunctionCanary5xxErrors:
    Type: AWS::CloudWatch::Alarm
    Condition: UseCanaryDeploymentAlarms
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      OKActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      AlarmName: !Sub "${AWS::StackName}-UserInfoFunctionCanary5xxErrors"
      AlarmDescription: !Sub "UserInfoFunction Lambda returning 5xx response."
      Namespace: AWS/ApiGateway
      MetricName: 5XXError
      Dimensions:
        - Name: Method
          Value: POST
        - Name: ApiName
          Value: !Sub "${AWS::StackName} - BAV Credential Issuer Private API"
        - Name: Stage
          Value: !Ref Environment
        - Name: Resource
          Value: /userinfo
      Statistic: Sum
      Unit: Count
      Period: 60
      EvaluationPeriods: 3
      DatapointsToAlarm: 2
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  UserInfoConcurrency80Alarm:
    Type: AWS::CloudWatch::Alarm
    Condition: "ApplyReservedConcurrency"
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-topic-critical-alert
      OKActions:
        - !ImportValue platform-alarm-topic-critical-alert
      InsufficientDataActions: []
      AlarmDescription: !Sub "Trigger the alarm if over 80% of UserInfo is used. ${SupportManualURL}"
      AlarmName: !Sub "${AWS::StackName}-UserInfoFunction-concurrency"
      MetricName: ConcurrentExecutions
      Namespace: AWS/Lambda
      Dimensions:
        - Name: FunctionName
          Value: !Ref UserInfoFunction
      Statistic: Maximum
      Period: 60 # This is the minimum value for the AWS Namespace
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: !Ref LambdaConcurrencyThreshold
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching

  UserInfoThrottleAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-topic-critical-alert
      OKActions:
        - !ImportValue platform-alarm-topic-critical-alert
      InsufficientDataActions: []
      AlarmDescription: !Sub "Trigger if the ${UserInfoFunction} lambda throttles. ${SupportManualURL}"
      AlarmName: !Sub "${AWS::StackName}-UserInfoFunction-throttles"
      MetricName: Throttles
      Namespace: AWS/Lambda
      Statistic: Sum
      Dimensions:
        - Name: FunctionName
          Value: !Ref UserInfoFunction
      TreatMissingData: notBreaching
      Period: 60 # This is the minimum value for the AWS Namespace
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold

  UserInfo5XXApiGwErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub "${AWS::StackName}-UserInfo5XXApiGwErrorAlarm"
      AlarmDescription: !Sub "There has been a small proportion of 5XX errors on the UserInfo endpoint. ${SupportManualURL}"
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      AlarmActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      InsufficientDataActions: [ ]
      Dimensions: [ ]
      EvaluationPeriods: 5
      DatapointsToAlarm: 2
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations<4 || error<2,0,errorPercentage)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub "${AWS::StackName} - BAV Credential Issuer Private API"
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /userinfo
            Period: 60
            Stat: Sum
        - Id: errorPercentage
          Label: errorPercentage
          ReturnData: false
          Expression: (error/invocations)*100
        - Id: error
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub "${AWS::StackName} - BAV Credential Issuer Private API"
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /userinfo
            Period: 60
            Stat: Sum

  UserInfo5XXApiGwErrorCriticalAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub "${AWS::StackName}-UserInfo5XXApiGwErrorCriticalAlarm"
      AlarmDescription: !Sub "There has been a significant proportion of 5XX errors on the UserInfo endpoint. ${SupportManualURL}"
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-pagerduty-alert-topic
        - !ImportValue platform-alarm-topic-critical-alert
      AlarmActions:
        - !ImportValue platform-alarm-pagerduty-alert-topic
        - !ImportValue platform-alarm-topic-critical-alert
      InsufficientDataActions: [ ]
      Dimensions: [ ]
      EvaluationPeriods: 5
      DatapointsToAlarm: 2
      Threshold: 80
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations<10,0,errorPercentage)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub "${AWS::StackName} - BAV Credential Issuer Private API"
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /userinfo
            Period: 60
            Stat: Sum
        - Id: errorPercentage
          Label: errorPercentage
          ReturnData: false
          Expression: (error/invocations)*100
        - Id: error
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub "${AWS::StackName} - BAV Credential Issuer Private API"
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /userinfo
            Period: 60
            Stat: Sum

  UserInfo4XXApiGwErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub "${AWS::StackName}-UserInfo4XXApiGwErrorAlarm"
      AlarmDescription: !Sub "There has been a small proportion of 4XX errors on the UserInfo endpoint. ${SupportManualURL}"
      ActionsEnabled: false   # alarm reviewed in production and decision made to disable
      OKActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      AlarmActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      InsufficientDataActions: [ ]
      Dimensions: [ ]
      EvaluationPeriods: 5
      DatapointsToAlarm: 2
      Threshold: 10
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations<3 || error<2,0,errorPercentage)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: ApiName
                  Value: !Sub "${AWS::StackName} - BAV Credential Issuer Private API"
                - Name: Resource
                  Value: /userinfo
                - Name: Stage
                  Value: !Ref Environment
                - Name: Method
                  Value: POST
            Period: 60
            Stat: Sum
        - Id: errorPercentage
          Label: errorPercentage
          ReturnData: false
          Expression: (error/invocations)*100
        - Id: error
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 4XXError
              Dimensions:
                - Name: ApiName
                  Value: !Sub "${AWS::StackName} - BAV Credential Issuer Private API"
                - Name: Resource
                  Value: /userinfo
                - Name: Stage
                  Value: !Ref Environment
                - Name: Method
                  Value: POST
            Period: 60
            Stat: Sum

  ## AccessToken
  TokenFunction:
    Type: AWS::Serverless::Function
    DependsOn: TokenFunctionLogGroup
    Properties:
      FunctionName: !Sub "Access-Token-${AWS::StackName}"
      DeploymentPreference:
        Type: !Ref LambdaDeploymentPreference
        Role: !GetAtt CodeDeployServiceRole.Arn
        Alarms: !If
          - UseCanaryDeploymentAlarms
          - [!Ref TokenFunctionFatalErrorAlarm, !Ref TokenFunctionCanary5xxErrors, !Ref TokenFunctionLambdaErrors]
          - [!Ref AWS::NoValue]
      Handler: AccessTokenHandler.lambdaHandler
      CodeUri: ../src/
      ReservedConcurrentExecutions: !If
        - ApplyReservedConcurrency
        - !Ref LambdaConcurrency
        - !Ref AWS::NoValue
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: AccessTokenHandler
          KMS_KEY_ARN:
            Fn::ImportValue: !Sub "${L2KMSStackName}-vc-signing-key"
          DNSSUFFIX: !FindInMap [ EnvironmentVariables, !Ref Environment, DNSSUFFIX ]
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSXrayWriteOnlyAccess
        - DynamoDBWritePolicy:
            TableName:
              Fn::ImportValue:
                !Sub "${L2DynamoStackName}-session-table-name"
        - DynamoDBReadPolicy:
            TableName:
              Fn::ImportValue:
                !Sub "${L2DynamoStackName}-session-table-name"
        - KMSDecryptPolicy:
            KeyId:
              Fn::ImportValue:
                !Sub "${L2DynamoStackName}-session-table-key-id"
        - Statement:
            - Sid: KMSPolicy
              Effect: Allow
              Action:
                - kms:Sign
              Resource:
                Fn::ImportValue: !Sub "${L2KMSStackName}-vc-signing-key"
      Events:
        token:
          Type: Api
          Properties:
            Path: /token
            Method: post
            RestApiId: !Ref BAVRestApi
    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: false # Enabling source maps will create the required NODE_OPTIONS environment variables on your lambda function during sam build
        EntryPoints:
          - AccessTokenHandler.ts

  TokenFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/Access-Token-${AWS::StackName}"
      RetentionInDays: !FindInMap [ EnvironmentConfiguration, !Ref Environment, logretentionindays ]

  TokenFunctionLogsSubscriptionFilterCSLS:
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn:
        !FindInMap [PlatformConfiguration, !Ref Environment, CSLSEGRESS]
      FilterPattern: ""
      LogGroupName: !Ref TokenFunctionLogGroup

  TokenFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref TokenFunction
      Principal: apigateway.amazonaws.com

  TokenFunctionFatalErorMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref TokenFunctionLogGroup
      FilterPattern: '{ $.level = "FATAL" || $.message = "Unhandled Exception:*" }'
      MetricTransformations:
        -
          MetricValue: "1"
          MetricNamespace: !Sub "${AWS::StackName}/LogMessages"
          MetricName: "TokenFunction-Fatalerror"

  TokenFunctionFatalErrorAlarm:
    DependsOn:
      - "TokenFunctionFatalErorMetricFilter"
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub "${AWS::StackName}-TokenFunction-FatalErrorAlarm"
      AlarmDescription: !Sub "Trigger an alarm when Fatal Error occurs. ${SupportManualURL}"
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      AlarmActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      InsufficientDataActions: [ ]
      MetricName: TokenFunction-Fatalerror
      Namespace: !Sub "${AWS::StackName}/LogMessages"
      Statistic: Sum
      Dimensions: [ ]
      Period: 60
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  TokenFunctionLambdaErrors:
    Type: AWS::CloudWatch::Alarm
    Condition: UseCanaryDeploymentAlarms
    Properties:
      AlarmName: !Sub "${AWS::StackName}-TokenFunctionLambdaErrors"
      AlarmDescription: !Sub "Trigger an alarm when lambda errors occurs. ${SupportManualURL}"
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      OKActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      InsufficientDataActions: []
      MetricName: Errors
      Namespace: AWS/Lambda
      Statistic: Sum
      Dimensions:
        - Name: Resource
          Value: !Sub "${AWS::StackName}-TokenFunction:live"
        - Name: ExecutedVersion
          Value: !Sub TokenFunction.Version.Version
      Period: 60
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching

  TokenFunctionCanary5xxErrors:
    Type: AWS::CloudWatch::Alarm
    Condition: UseCanaryDeploymentAlarms
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      OKActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      AlarmName: !Sub "${AWS::StackName}-TokenFunctionCanary5xxErrors"
      AlarmDescription: !Sub "TokenFunction Lambda returning 5xx response."
      Namespace: AWS/ApiGateway
      MetricName: 5XXError
      Dimensions:
        - Name: Method
          Value: POST
        - Name: ApiName
          Value: !Sub "${AWS::StackName} - BAV Credential Issuer Private API"
        - Name: Stage
          Value: !Ref Environment
        - Name: Resource
          Value: /token
      Statistic: Sum
      Unit: Count
      Period: 60
      EvaluationPeriods: 3
      DatapointsToAlarm: 2
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  TokenConcurrency80Alarm:
    Type: AWS::CloudWatch::Alarm
    Condition: "ApplyReservedConcurrency"
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-topic-critical-alert
      OKActions:
        - !ImportValue platform-alarm-topic-critical-alert
      InsufficientDataActions: []
      AlarmDescription: !Sub "Trigger the alarm if over 80% of Token concurrency is used. ${SupportManualURL}"
      AlarmName: !Sub "${AWS::StackName}-TokenFunction-concurrency"
      MetricName: ConcurrentExecutions
      Namespace: AWS/Lambda
      Dimensions:
        - Name: FunctionName
          Value: !Ref TokenFunction
      Statistic: Maximum
      Period: 60 # This is the minimum value for the AWS Namespace
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: !Ref LambdaConcurrencyThreshold
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching

  TokenThrottleAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-topic-critical-alert
      OKActions:
        - !ImportValue platform-alarm-topic-critical-alert
      InsufficientDataActions: []
      AlarmDescription: !Sub "Trigger if the ${TokenFunction} lambda throttles. ${SupportManualURL}"
      AlarmName: !Sub "${AWS::StackName}-TokenFunction-throttles"
      MetricName: Throttles
      Namespace: AWS/Lambda
      Statistic: Sum
      Dimensions:
        - Name: FunctionName
          Value: !Ref TokenFunction
      TreatMissingData: notBreaching
      Period: 60 # This is the minimum value for the AWS Namespace
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold

  Token5XXApiGwErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub "${AWS::StackName}-Token5XXApiGwErrorAlarm"
      AlarmDescription: !Sub "There has been a small proportion of 5XX errors on the Token endpoint. ${SupportManualURL}"
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      AlarmActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      InsufficientDataActions: [ ]
      Dimensions: [ ]
      EvaluationPeriods: 5
      DatapointsToAlarm: 2
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations<4 || error<2,0,errorPercentage)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub "${AWS::StackName} - BAV Credential Issuer Private API"
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /token
            Period: 60
            Stat: Sum
        - Id: errorPercentage
          Label: errorPercentage
          ReturnData: false
          Expression: (error/invocations)*100
        - Id: error
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub "${AWS::StackName} - BAV Credential Issuer Private API"
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /token
            Period: 60
            Stat: Sum

  Token5XXApiGwErrorCriticalAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub "${AWS::StackName}-Token5XXApiGwErrorCriticalAlarm"
      AlarmDescription: !Sub "There has been a significant proportion of 5XX errors on the Token endpoint. ${SupportManualURL}"
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-pagerduty-alert-topic
        - !ImportValue platform-alarm-topic-critical-alert
      AlarmActions:
        - !ImportValue platform-alarm-pagerduty-alert-topic
        - !ImportValue platform-alarm-topic-critical-alert
      InsufficientDataActions: [ ]
      Dimensions: [ ]
      EvaluationPeriods: 5
      DatapointsToAlarm: 2
      Threshold: 80
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations<10,0,errorPercentage)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub "${AWS::StackName} - BAV Credential Issuer Private API"
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /token
            Period: 60
            Stat: Sum
        - Id: errorPercentage
          Label: errorPercentage
          ReturnData: false
          Expression: (error/invocations)*100
        - Id: error
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub "${AWS::StackName} - BAV Credential Issuer Private API"
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /token
            Period: 60
            Stat: Sum

  Token4XXApiGwErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub "${AWS::StackName}-Token4XXApiGwErrorAlarm"
      AlarmDescription: !Sub "There has been a small proportion of 4XX errors on the Token endpoint. ${SupportManualURL}"
      ActionsEnabled: false   # alarm reviewed in production and decision made to disable
      OKActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      AlarmActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      InsufficientDataActions: [ ]
      Dimensions: [ ]
      EvaluationPeriods: 5
      DatapointsToAlarm: 2
      Threshold: 10
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations<3 || error<2,0,errorPercentage)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: ApiName
                  Value: !Sub "${AWS::StackName} - BAV Credential Issuer Private API"
                - Name: Resource
                  Value: /token
                - Name: Stage
                  Value: !Ref Environment
                - Name: Method
                  Value: POST
            Period: 60
            Stat: Sum
        - Id: errorPercentage
          Label: errorPercentage
          ReturnData: false
          Expression: (error/invocations)*100
        - Id: error
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 4XXError
              Dimensions:
                - Name: ApiName
                  Value: !Sub "${AWS::StackName} - BAV Credential Issuer Private API"
                - Name: Resource
                  Value: /token
                - Name: Stage
                  Value: !Ref Environment
                - Name: Method
                  Value: POST
            Period: 60
            Stat: Sum

  AuthorizationFunction:
    Type: AWS::Serverless::Function
    DependsOn: AuthorizationFunctionLogGroup
    Properties:
      FunctionName: !Sub "BAV-Authorization-${AWS::StackName}"
      DeploymentPreference:
        Type: !Ref LambdaDeploymentPreference
        Role: !GetAtt CodeDeployServiceRole.Arn
        Alarms: !If
          - UseCanaryDeploymentAlarms
          - [!Ref AuthorizationFunctionFatalErrorAlarm, !Ref AuthorizationFunctionCanary5xxErrors, !Ref AuthorizationFunctionLambdaErrors]
          - [!Ref AWS::NoValue]
      Handler: AuthorizationHandler.lambdaHandler
      CodeUri: ../src/
      ReservedConcurrentExecutions: !If
        - ApplyReservedConcurrency
        - !Ref LambdaConcurrency
        - !Ref AWS::NoValue
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: AuthorizationHandler
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSXrayWriteOnlyAccess
        - DynamoDBWritePolicy:
            TableName:
              Fn::ImportValue: !Sub "${L2DynamoStackName}-session-table-name"
        - DynamoDBReadPolicy:
            TableName:
              Fn::ImportValue: !Sub "${L2DynamoStackName}-session-table-name"
        - KMSDecryptPolicy:
            KeyId:
              Fn::ImportValue: !Sub "${L2DynamoStackName}-session-table-key-id"
        - Statement:
            - Effect: Allow
              Action:
                - "sqs:SendMessage"
              Resource: !GetAtt TxMASQSQueue.Arn
            - Effect: Allow
              Action:
                - "kms:Encrypt"
                - "kms:Decrypt"
                - "kms:GenerateDataKey"
              Resource: !GetAtt TxMAKMSEncryptionKey.Arn
      Events:
        authorization:
          Type: Api
          Properties:
            Path: /authorization
            Method: get
            RestApiId: !Ref BAVRestApi

    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: false # Enabling source maps will create the required NODE_OPTIONS environment variables on your lambda function during sam build
        EntryPoints:
          - AuthorizationHandler.ts

  AuthorizationFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/BAV-Authorization-${AWS::StackName}"
      RetentionInDays:
        !FindInMap [
          EnvironmentConfiguration,
          !Ref Environment,
          logretentionindays,
        ]

  AuthorizationFunctionLogsSubscriptionFilterCSLS:
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn:
        !FindInMap [PlatformConfiguration, !Ref Environment, CSLSEGRESS]
      FilterPattern: ""
      LogGroupName: !Ref AuthorizationFunctionLogGroup

  AuthorizationFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref AuthorizationFunction
      Principal: apigateway.amazonaws.com

  AuthorizationFunctionFatalErorMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref AuthorizationFunctionLogGroup
      FilterPattern: '{ $.level = "FATAL" || $.message = "Unhandled Exception:*" }'
      MetricTransformations:
        -
          MetricValue: "1"
          MetricNamespace: !Sub "${AWS::StackName}/LogMessages"
          MetricName: "AuthorizationFunction-Fatalerror"

  AuthorizationFunctionFatalErrorAlarm:
    DependsOn:
      - "AuthorizationFunctionFatalErorMetricFilter"
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub "${AWS::StackName}-AuthorizationFunction-FatalErrorAlarm"
      AlarmDescription: !Sub "Trigger an alarm when Fatal Error occurs. ${SupportManualURL}"
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      AlarmActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      InsufficientDataActions: [ ]
      MetricName: AuthorizationFunction-Fatalerror
      Namespace: !Sub "${AWS::StackName}/LogMessages"
      Statistic: Sum
      Dimensions: [ ]
      Period: 60
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  AuthorizationFunctionLambdaErrors:
    Type: AWS::CloudWatch::Alarm
    Condition: UseCanaryDeploymentAlarms
    Properties:
      AlarmName: !Sub "${AWS::StackName}-AuthorizationFunctionLambdaErrors"
      AlarmDescription: !Sub "Trigger an alarm when lambda errors occurs. ${SupportManualURL}"
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      OKActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      InsufficientDataActions: []
      MetricName: Errors
      Namespace: AWS/Lambda
      Statistic: Sum
      Dimensions:
        - Name: Resource
          Value: !Sub "${AWS::StackName}-AuthorizationFunction:live"
        - Name: ExecutedVersion
          Value: !Sub AuthorizationFunction.Version.Version
      Period: 60
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching

  AuthorizationFunctionCanary5xxErrors:
    Type: AWS::CloudWatch::Alarm
    Condition: UseCanaryDeploymentAlarms
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      OKActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      AlarmName: !Sub "${AWS::StackName}-AuthorizationFunctionCanary5xxErrors"
      AlarmDescription: !Sub "AuthorizationFunction Lambda returning 5xx response."
      Namespace: AWS/ApiGateway
      MetricName: 5XXError
      Dimensions:
        - Name: Method
          Value: GET
        - Name: ApiName
          Value: !Sub "${AWS::StackName} - BAV Credential Issuer Private API"
        - Name: Stage
          Value: !Ref Environment
        - Name: Resource
          Value: /authorization
      Statistic: Sum
      Unit: Count
      Period: 60
      EvaluationPeriods: 3
      DatapointsToAlarm: 2
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  Authorization5XXApiGwErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub "${AWS::StackName}-Authorization5XXApiGwErrorAlarm"
      AlarmDescription: !Sub "There has been a small proportion of 5XX errors on the Authorization endpoint. ${SupportManualURL}"
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      AlarmActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      InsufficientDataActions: [ ]
      Dimensions: [ ]
      EvaluationPeriods: 5
      DatapointsToAlarm: 2
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations<4 || error<2,0,errorPercentage)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub "${AWS::StackName} - BAV Credential Issuer Private API"
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /authorization
            Period: 60
            Stat: Sum
        - Id: errorPercentage
          Label: errorPercentage
          ReturnData: false
          Expression: (error/invocations)*100
        - Id: error
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub "${AWS::StackName} - BAV Credential Issuer Private API"
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /authorization
            Period: 60
            Stat: Sum

  Authorization5XXApiGwErrorCriticalAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub "${AWS::StackName}-Authorization5XXApiGwErrorCriticalAlarm"
      AlarmDescription: !Sub "There has been a significant proportion of 5XX errors on the Authorization endpoint. ${SupportManualURL}"
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-pagerduty-alert-topic
        - !ImportValue platform-alarm-topic-critical-alert
      AlarmActions:
        - !ImportValue platform-alarm-pagerduty-alert-topic
        - !ImportValue platform-alarm-topic-critical-alert
      InsufficientDataActions: [ ]
      Dimensions: [ ]
      EvaluationPeriods: 5
      DatapointsToAlarm: 2
      Threshold: 80
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations<10,0,errorPercentage)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub "${AWS::StackName} - BAV Credential Issuer Private API"
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /authorization
            Period: 60
            Stat: Sum
        - Id: errorPercentage
          Label: errorPercentage
          ReturnData: false
          Expression: (error/invocations)*100
        - Id: error
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub "${AWS::StackName} - BAV Credential Issuer Private API"
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /authorization
            Period: 60
            Stat: Sum

  Authorization4XXApiGwErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub "${AWS::StackName}-Authorization4XXApiGwErrorAlarm"
      AlarmDescription: !Sub "There has been a small proportion of 4XX errors on the Authorization endpoint. ${SupportManualURL}"
      ActionsEnabled: false   # alarm reviewed in production and decision made to disable
      OKActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      AlarmActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      InsufficientDataActions: [ ]
      Dimensions: [ ]
      EvaluationPeriods: 5
      DatapointsToAlarm: 2
      Threshold: 10
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations<3 || error<2,0,errorPercentage)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: ApiName
                  Value: !Sub "${AWS::StackName} - BAV Credential Issuer Private API"
                - Name: Resource
                  Value: /authorization
                - Name: Stage
                  Value: !Ref Environment
                - Name: Method
                  Value: GET
            Period: 60
            Stat: Sum
        - Id: errorPercentage
          Label: errorPercentage
          ReturnData: false
          Expression: (error/invocations)*100
        - Id: error
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 4XXError
              Dimensions:
                - Name: ApiName
                  Value: !Sub "${AWS::StackName} - BAV Credential Issuer Private API"
                - Name: Resource
                  Value: /authorization
                - Name: Stage
                  Value: !Ref Environment
                - Name: Method
                  Value: GET
            Period: 60
            Stat: Sum

  ## VerifyAccountHandler
  VerifyAccountFunction:
    Type: AWS::Serverless::Function
    DependsOn: VerifyAccountFunctionLogGroup
    Properties:
      FunctionName: !Sub "BAV-verify-account-${AWS::StackName}"
      DeploymentPreference:
        Type: !Ref LambdaDeploymentPreference
        Role: !GetAtt CodeDeployServiceRole.Arn
        Alarms: !If
          - UseCanaryDeploymentAlarms
          - [!Ref VerifyAccountFunctionFatalErrorAlarm, !Ref VerifyAccountFunctionCanary5xxErrors, !Ref VerifyAccountFunctionLambdaErrors]
          - [!Ref AWS::NoValue]
      Handler: VerifyAccountHandler.lambdaHandler
      Timeout: 75
      CodeUri: ../src/
      ReservedConcurrentExecutions: !If
        - ApplyReservedConcurrency
        - !Ref LambdaConcurrency
        - !Ref AWS::NoValue
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: VerifyAccountHandler
          SAVING_PARTIAL_NAME_DATA: True
          KMS_KEY_ARN:
            Fn::ImportValue: !Sub "${L2KMSStackName}-vc-signing-key"
          ENCRYPTION_KEY_IDS:
            Fn::ImportValue: !Sub "${L2KMSStackName}-encryption-key"
          HMRC_TOKEN_SSM_PATH: !Sub "/${Environment}/HMRC/TOKEN"
          HMRC_BASE_URL: !FindInMap [ EnvironmentVariables, !Ref Environment, HMRCVERIFYBASEURL ]
          HMRC_MAX_RETRIES: 2
          EXPERIAN_MAX_RETRIES: 2
          HMRC_TOKEN_BACKOFF_PERIOD_MS: 5000 # 5 seconds
          LOG_THIRDPARTY_API_RESPONSE: false
          THIRDPARTY_DIRECT_SUBMISSION: false
          CREDENTIAL_VENDOR_SSM_PATH: !Sub "/${Environment}/bav/vendor"
          PARTIAL_MATCHES_QEUEUE_URL: !Ref PartialMatchesQueue
          EXPERIAN_PASSWORD_SSM_PATH: !Sub "/${Environment}/bav-cri-api/CrosscoreV2/Password"
          EXPERIAN_USERNAME_SSM_PATH: !Sub "/${Environment}/bav-cri-api/CrosscoreV2/Username"
          EXPERIAN_CLIENT_ID_SSM_PATH: !Sub "/${Environment}/bav-cri-api/CrosscoreV2/clientId"
          EXPERIAN_CLIENT_SECRET_SSM_PATH: !Sub "/${Environment}/bav-cri-api/CrosscoreV2/clientSecret"
          CLIENT_CONFIG: !FindInMap [ EnvironmentVariables, !Ref Environment, CLIENTS ]
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSXrayWriteOnlyAccess
        - SSMParameterReadPolicy:
            ParameterName: !Sub "${Environment}/bav/vendor"
        - SSMParameterReadPolicy:
            ParameterName: !Sub "${Environment}/HMRC/TOKEN"
        - SSMParameterReadPolicy:
            ParameterName: !Sub "${Environment}/bav-cri-api/CrosscoreV2/Username"
        - SSMParameterReadPolicy:
            ParameterName: !Sub "${Environment}/bav-cri-api/CrosscoreV2/Password"
        - SSMParameterReadPolicy:
            ParameterName: !Sub "${Environment}/bav-cri-api/CrosscoreV2/clientId"
        - SSMParameterReadPolicy:
            ParameterName: !Sub "${Environment}/bav-cri-api/CrosscoreV2/clientSecret"
        - DynamoDBWritePolicy:
            TableName:
              Fn::ImportValue: !Sub "${L2DynamoStackName}-session-table-name"
        - DynamoDBWritePolicy:
            TableName:
              Fn::ImportValue: !Sub "${L2DynamoStackName}-person-identity-table-name"
        - DynamoDBWritePolicy:
            TableName:
              Fn::ImportValue: !Sub "${L2DynamoStackName}-experian-token-table-name"
        - DynamoDBReadPolicy:
            TableName:
              Fn::ImportValue: !Sub "${L2DynamoStackName}-session-table-name"
        - DynamoDBReadPolicy:
            TableName:
              Fn::ImportValue: !Sub "${L2DynamoStackName}-person-identity-table-name"
        - DynamoDBReadPolicy:
            TableName:
              Fn::ImportValue: !Sub "${L2DynamoStackName}-experian-token-table-name"
        - KMSDecryptPolicy:
            KeyId:
              Fn::ImportValue: !Sub "${L2DynamoStackName}-session-table-key-id"
        - KMSDecryptPolicy:
            KeyId:
              Fn::ImportValue: !Sub "${L2DynamoStackName}-person-identity-table-key-id"
        - KMSDecryptPolicy:
            KeyId:
              Fn::ImportValue: !Sub "${L2DynamoStackName}-experian-token-table-key-id"
        - Statement:
            - Effect: Allow
              Action:
                - "sqs:SendMessage"
              Resource: !GetAtt TxMASQSQueue.Arn
            - Sid: KMSPolicy
              Effect: Allow
              Action:
                - kms:*
              Resource: "*"
            - Effect: Allow
              Action:
                - "sqs:SendMessage"
              Resource: !GetAtt TxMASQSQueue.Arn
            - Effect: Allow
              Action:
                - "kms:Encrypt"
                - "kms:Decrypt"
                - "kms:GenerateDataKey"
              Resource: !GetAtt TxMAKMSEncryptionKey.Arn
        - Statement:
            - Sid: AllowSendMessageToPartialNameQueue
              Effect: Allow
              Action:
                - "sqs:SendMessage"
              Resource: !GetAtt PartialMatchesQueue.Arn
            - Sid: AllowEncryptMessageSendingToPartialNameQueue
              Effect: Allow
              Action:
                - "kms:Encrypt"
                - "kms:Decrypt"
                - "kms:GenerateDataKey"
              Resource: !GetAtt PartialMatchesEncryptionKey.Arn
      Events:
        verifyAccount:
          Type: Api
          Properties:
            Path: /verify-account
            Method: post
            RestApiId: !Ref BAVRestApi

    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: false
        EntryPoints:
          - VerifyAccountHandler.ts

  VerifyAccountFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/BAV-verify-account-${AWS::StackName}"
      RetentionInDays:
        !FindInMap [
          EnvironmentConfiguration,
          !Ref Environment,
          logretentionindays,
        ]

  VerifyAccountFunctionLogsSubscriptionFilterCSLS:
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn:
        !FindInMap [ PlatformConfiguration, !Ref Environment, CSLSEGRESS ]
      FilterPattern: ""
      LogGroupName: !Ref VerifyAccountFunctionLogGroup

  VerifyAccountFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref VerifyAccountFunction
      Principal: apigateway.amazonaws.com

  VerifyAccountFunctionFatalErorMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref VerifyAccountFunctionLogGroup
      FilterPattern: '{ $.level = "FATAL" || $.message = "Unhandled Exception:*" }'
      MetricTransformations:
        -
          MetricValue: "1"
          MetricNamespace: !Sub "${AWS::StackName}/LogMessages"
          MetricName: "VerifyAccountFunction-Fatalerror"

  VerifyAccountFunctionFatalErrorAlarm:
    DependsOn:
      - "VerifyAccountFunctionFatalErorMetricFilter"
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub "${AWS::StackName}-VerifyAccountFunction-FatalErrorAlarm"
      AlarmDescription: !Sub "Trigger an alarm when Fatal Error occurs. ${SupportManualURL}"
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      AlarmActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      InsufficientDataActions: [ ]
      MetricName: VerifyAccountFunction-Fatalerror
      Namespace: !Sub "${AWS::StackName}/LogMessages"
      Statistic: Sum
      Dimensions: [ ]
      Period: 60
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  VerifyAccountFunctionLambdaErrors:
    Type: AWS::CloudWatch::Alarm
    Condition: UseCanaryDeploymentAlarms
    Properties:
      AlarmName: !Sub "${AWS::StackName}-VerifyAccountFunctionLambdaErrors"
      AlarmDescription: !Sub "Trigger an alarm when lambda errors occurs. ${SupportManualURL}"
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      OKActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      InsufficientDataActions: []
      MetricName: Errors
      Namespace: AWS/Lambda
      Statistic: Sum
      Dimensions:
        - Name: Resource
          Value: !Sub "${AWS::StackName}-VerifyAccountFunction:live"
        - Name: ExecutedVersion
          Value: !Sub VerifyAccountFunction.Version.Version
      Period: 60
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching

  VerifyAccountFunctionCanary5xxErrors:
    Type: AWS::CloudWatch::Alarm
    Condition: UseCanaryDeploymentAlarms
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      OKActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      AlarmName: !Sub "${AWS::StackName}-VerifyAccountFunctionCanary5xxErrors"
      AlarmDescription: !Sub "VerifyAccountFunction Lambda returning 5xx response."
      Namespace: AWS/ApiGateway
      MetricName: 5XXError
      Dimensions:
        - Name: Method
          Value: POST
        - Name: ApiName
          Value: !Sub "${AWS::StackName} - BAV Credential Issuer Private API"
        - Name: Stage
          Value: !Ref Environment
        - Name: Resource
          Value: /verify-account
      Statistic: Sum
      Unit: Count
      Period: 60
      EvaluationPeriods: 3
      DatapointsToAlarm: 2
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  VerifyAccountConcurrency80Alarm:
    Type: AWS::CloudWatch::Alarm
    Condition: "ApplyReservedConcurrency"
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-topic-critical-alert
      OKActions:
        - !ImportValue platform-alarm-topic-critical-alert
      InsufficientDataActions: []
      AlarmDescription: !Sub "Trigger the alarm if over 80% of VerifyAccount is used. ${SupportManualURL}"
      AlarmName: !Sub "${AWS::StackName}-VerifyAccountFunction-concurrency"
      MetricName: ConcurrentExecutions
      Namespace: AWS/Lambda
      Dimensions:
        - Name: FunctionName
          Value: !Ref VerifyAccountFunction
      Statistic: Maximum
      Period: 60 # This is the minimum value for the AWS Namespace
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: !Ref LambdaConcurrencyThreshold
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching

  VerifyAccountThrottleAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-topic-critical-alert
      OKActions:
        - !ImportValue platform-alarm-topic-critical-alert
      InsufficientDataActions: []
      AlarmDescription: !Sub "Trigger if the ${VerifyAccountFunction} lambda throttles. ${SupportManualURL}"
      AlarmName: !Sub "${AWS::StackName}-VerifyAccountFunction-throttles"
      MetricName: Throttles
      Namespace: AWS/Lambda
      Statistic: Sum
      Dimensions:
        - Name: FunctionName
          Value: !Ref VerifyAccountFunction
      TreatMissingData: notBreaching
      Period: 60 # This is the minimum value for the AWS Namespace
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold

  VerifyAccount5XXApiGwErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub "${AWS::StackName}-VerifyAccount5XXApiGwErrorAlarm"
      AlarmDescription: !Sub "There has been a small proportion of 5XX errors on the VerifyAccount endpoint. ${SupportManualURL}"
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      AlarmActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      InsufficientDataActions: [ ]
      Dimensions: [ ]
      EvaluationPeriods: 5
      DatapointsToAlarm: 2
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations<4 || error<2,0,errorPercentage)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub "${AWS::StackName} - BAV Credential Issuer Private API"
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /verify-account
            Period: 60
            Stat: Sum
        - Id: errorPercentage
          Label: errorPercentage
          ReturnData: false
          Expression: (error/invocations)*100
        - Id: error
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub "${AWS::StackName} - BAV Credential Issuer Private API"
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /verify-account
            Period: 60
            Stat: Sum

  VerifyAccount5XXApiGwErrorCriticalAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub "${AWS::StackName}-VerifyAccount5XXApiGwErrorCriticalAlarm"
      AlarmDescription: !Sub "There has been a significant proportion of 5XX errors on the VerifyAccount endpoint. ${SupportManualURL}"
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-topic-critical-alert
      AlarmActions:
        - !ImportValue platform-alarm-topic-critical-alert
      InsufficientDataActions: [ ]
      Dimensions: [ ]
      EvaluationPeriods: 5
      DatapointsToAlarm: 2
      Threshold: 80
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations<10,0,errorPercentage)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub "${AWS::StackName} - BAV Credential Issuer Private API"
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /verify-account
            Period: 60
            Stat: Sum
        - Id: errorPercentage
          Label: errorPercentage
          ReturnData: false
          Expression: (error/invocations)*100
        - Id: error
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub "${AWS::StackName} - BAV Credential Issuer Private API"
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /verify-account
            Period: 60
            Stat: Sum

  VerifyAccount4XXApiGwErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub "${AWS::StackName}-VerifyAccount4XXApiGwErrorAlarm"
      AlarmDescription: !Sub "There has been a small proportion of 4XX errors on the VerifyAccount endpoint. ${SupportManualURL}"
      ActionsEnabled: false   # alarm reviewed in production and decision made to disable
      OKActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      AlarmActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      InsufficientDataActions: [ ]
      Dimensions: [ ]
      EvaluationPeriods: 5
      DatapointsToAlarm: 2
      Threshold: 10
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations<3 || error<2,0,errorPercentage)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: ApiName
                  Value: !Sub "${AWS::StackName} - BAV Credential Issuer Private API"
                - Name: Resource
                  Value: /verify-account
                - Name: Stage
                  Value: !Ref Environment
                - Name: Method
                  Value: POST
            Period: 60
            Stat: Sum
        - Id: errorPercentage
          Label: errorPercentage
          ReturnData: false
          Expression: (error/invocations)*100
        - Id: error
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 4XXError
              Dimensions:
                - Name: ApiName
                  Value: !Sub "${AWS::StackName} - BAV Credential Issuer Private API"
                - Name: Resource
                  Value: /verify-account
                - Name: Stage
                  Value: !Ref Environment
                - Name: Method
                  Value: POST
            Period: 60
            Stat: Sum

  ## TXMA SQS Queue
  TxMASQSQueue:
    Type: AWS::SQS::Queue
    Properties:
      MessageRetentionPeriod: !FindInMap [EnvironmentVariables, !Ref Environment, TXMAMESSAGERETENTIONPERIODDAYS]
      VisibilityTimeout: 60
      KmsMasterKeyId: !Ref TxMAKeyAlias
      RedrivePolicy:
        deadLetterTargetArn:
          Fn::GetAtt:
            - "TxMASQSQueueDeadLetterQueue"
            - "Arn"
        maxReceiveCount: 5

  TxMASQSQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Ref TxMASQSQueue
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action:
              - "sqs:DeleteMessage"
              - "sqs:GetQueueAttributes"
              - "sqs:ChangeMessageVisibility"
              - "sqs:ReceiveMessage"
            Resource:
              - !GetAtt TxMASQSQueue.Arn
            Principal:
              AWS: !If
                - IsOutboundSQSConnected
                - !FindInMap [TxMAAccounts, !Ref Environment, EVENTS]
                - !Ref AWS::NoValue

  TxMASQSQueueDeadLetterQueue:
    Type: AWS::SQS::Queue
    Properties:
      MessageRetentionPeriod: 259200 # three days
      KmsMasterKeyId: !Sub TxMAKMSEncryptionKey

  TxMAKMSEncryptionKey:
    Type: AWS::KMS::Key
    # KMS Key manually rotated.
    # checkov:skip=CKV_AWS_7: KMS Key manually rotated.
    Properties:
      Description: A KMS Key for encrypting the SQS Queue for TxMA
      Enabled: true
      KeyPolicy:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action:
              - "kms:*"
            Resource:
              - "*"
          - Effect: Allow
            Principal:
              AWS: !FindInMap [TxMAAccounts, !Ref Environment, EVENTS]
            Action:
              - "kms:Encrypt"
              - "kms:Decrypt"
              - "kms:GenerateDataKey"
            Resource:
              - "*"
      KeySpec: SYMMETRIC_DEFAULT
      KeyUsage: ENCRYPT_DECRYPT
      MultiRegion: false
      PendingWindowInDays: 7
      Tags:
        - Key: KeyType
          Value: Encryption Key
        - Key: Environment
          Value: !Sub ${Environment}

  TxMAKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !If
        - CreateDevResources
        - !Sub "alias/TxMAKMSEncryptionKey-${AWS::StackName}"
        - alias/TxMAKMSEncryptionKey
      TargetKeyId: !Ref TxMAKMSEncryptionKey

  TXMASQSOldMessagesAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub "${AWS::StackName}-TXMASQSOldMessagesAlarm"
      AlarmDescription: !Sub "Trigger an alarm when the age of the oldest TXMA message is 5 or more minutes. ${SupportManualURL}"
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      OKActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      InsufficientDataActions: [ ]
      MetricName: ApproximateAgeOfOldestMessage
      Namespace: AWS/SQS
      Statistic: Maximum
      Dimensions:
        - Name: QueueName
          Value: !GetAtt TxMASQSQueue.QueueName
      Period: 60
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 300
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  TXMADLQMessagesVisibleAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub "${AWS::StackName}-TXMADLQMessagesVisibleAlarm"
      AlarmDescription: !Sub "Trigger an alarm when message gets added to TXMA DLQ. ${SupportManualURL}"
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      OKActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      InsufficientDataActions: [ ]
      MetricName: ApproximateNumberOfMessagesVisible
      Namespace: AWS/SQS
      Statistic: Maximum
      Dimensions:
        - Name: QueueName
          Value: !GetAtt TxMASQSQueueDeadLetterQueue.QueueName
      Period: 60
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  ## PartialNameMatch SQS Queue
  PartialMatchesQueue:
    Type: AWS::SQS::Queue
    Properties:
      MessageRetentionPeriod: !FindInMap [EnvironmentVariables, !Ref Environment, PARTIALNAMEMATCHRENTIONPERIODDAYS]
      VisibilityTimeout: 60
      KmsMasterKeyId: !Ref PartialNameMatchKeyAlias
      RedrivePolicy:
        deadLetterTargetArn:
          Fn::GetAtt:
            - "PartialNameMatchQueueDeadLetterQueue"
            - "Arn"
        maxReceiveCount: 5

  namePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Ref PartialMatchesQueue
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: AllowUseOfPartialNameMatchQueue
            Effect: "Allow"
            Action:
              - "sqs:DeleteMessage"
              - "sqs:GetQueueAttributes"
              - "sqs:ChangeMessageVisibility"
              - "sqs:ReceiveMessage"
            Resource:
              - !GetAtt PartialMatchesQueue.Arn

  PartialNameMatchQueueDeadLetterQueue:
    Type: AWS::SQS::Queue
    Properties:
      MessageRetentionPeriod: 259200 # three days
      KmsMasterKeyId: !Sub PartialMatchesEncryptionKey

  PartialMatchesEncryptionKey:
    Type: AWS::KMS::Key
    # KMS Key manually rotated.
    # checkov:skip=CKV_AWS_7: KMS Key manually rotated.
    Properties:
      Description: A KMS Key for encrypting the SQS Queue for PartialNameMatches
      Enabled: true
      KeyPolicy:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action:
              - "kms:*"
            Resource:
              - "*"
      KeySpec: SYMMETRIC_DEFAULT
      KeyUsage: ENCRYPT_DECRYPT
      MultiRegion: false
      PendingWindowInDays: 7
      Tags:
        - Key: KeyType
          Value: Encryption Key
        - Key: Environment
          Value: !Sub ${Environment}

  PartialNameMatchKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !If
        - CreateDevResources
        - !Sub "alias/PartialMatchesEncryptionKey-${AWS::StackName}"
        - alias/PartialMatchesEncryptionKey
      TargetKeyId: !Ref PartialMatchesEncryptionKey

  PartialNameMatchSQSOldMessagesAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub "${AWS::StackName}-PartialNameMatchOldMessagesAlarm"
      AlarmDescription: !Sub "Trigger an alarm when the age of the oldest PartialNameMatch message is 5 or more minutes. ${SupportManualURL}"
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      OKActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      InsufficientDataActions: [ ]
      MetricName: ApproximateAgeOfOldestMessage
      Namespace: AWS/SQS
      Statistic: Maximum
      Dimensions:
        - Name: QueueName
          Value: !GetAtt PartialMatchesQueue.QueueName
      Period: 60
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 300
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  PartialNameMatchDLQMessagesVisibleAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub "${AWS::StackName}-PartialNameMatchDLQMessagesVisibleAlarm"
      AlarmDescription: !Sub "Trigger an alarm when message gets added to TXMA DLQ. ${SupportManualURL}"
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      OKActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      InsufficientDataActions: [ ]
      MetricName: ApproximateNumberOfMessagesVisible
      Namespace: AWS/SQS
      Statistic: Maximum
      Dimensions:
        - Name: QueueName
          Value: !GetAtt PartialNameMatchQueueDeadLetterQueue.QueueName
      Period: 60
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  ## Partial Names Athena and Glue resources
  PartialNameMatchGlueDatabase:
    Type: AWS::Glue::Database
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseInput:
        Description: !Sub "PartialNameMatch-${AWS::StackName}"
        Name: !Sub "partialnamematch-${AWS::StackName}"

  PartialNameMatchGlueTable:
    Type: AWS::Glue::Table
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseName: !Ref PartialNameMatchGlueDatabase
      TableInput:
        Description: !Sub "PartialNameMatch-${AWS::StackName}"
        Name: !Sub "partialnamematch-${AWS::StackName}"
        PartitionKeys: []
        TableType: EXTERNAL_TABLE
        StorageDescriptor:
          Location: !Sub "s3://${PartialNameMatchBucket}/"
          InputFormat: "org.apache.hadoop.mapred.TextInputFormat"
          OutputFormat: "org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat"
          SerdeInfo:
            Name: "partialnamematch"
            SerializationLibrary: "org.openx.data.jsonserde.JsonSerDe"
          Parameters: {
                        "ignore.malformed.json": "FALSE",
                        "dots.in.keys": "FALSE",
                        "case.insensitive": "TRUE",
                        "mapping": "TRUE"
          }
          Columns:
            - Name: itemNumber
              Type: string
            - Name: timeStamp
              Type: int
            - Name: cicName
              Type: string
            - Name: accountName
              Type: string
            - Name: accountExists
              Type: string
            - Name: nameMatches
              Type: string
            - Name: sortCodeBankName
              Type: string

  PartialNameMatchAthenaWorkgroup:
    Type: AWS::Athena::WorkGroup
    Properties:
      Description: !Sub "PartialNameMatch-${AWS::StackName"
      Name: !Sub "PartialNameMatch-${AWS::StackName}"
      RecursiveDeleteOption: true
      State: ENABLED
      WorkGroupConfiguration:
        EnforceWorkGroupConfiguration: true
        PublishCloudWatchMetricsEnabled: true
        ResultConfiguration:
          EncryptionConfiguration:
            EncryptionOption: "SSE_KMS"
            KmsKey: !Ref PartialNameMatchBucketKeyAlias
          ExpectedBucketOwner: !Ref AWS::AccountId
          OutputLocation: !Sub "s3://${PartialNameMatchAthenaResultsBucket}/"
  
  PartialNameMatchAthenaNamedQuery:
    Type: AWS::Athena::NamedQuery
    Properties:
      Database: !Ref PartialNameMatchGlueDatabase
      Description: "A query to return all the partial name records in the last 7 days."
      Name: "PartialNameRecordsInLast7Days"
      WorkGroup: !Ref PartialNameMatchAthenaWorkgroup
      QueryString: !Sub SELECT *,from_unixtime(timestamp) AS human_readable_timestamp FROM "partialnamematch-${AWS::StackName}" WHERE timestamp >= to_unixtime(current_date - interval '7' day) order by human_readable_timestamp asc;
        
  JsonWebKeysFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - "JsonWebKeysLogGroup"
    Properties:
      FunctionName: !Sub "JsonWebKeys-${AWS::StackName}"
      CodeUri: ../src/
      Handler: JwksHandler.lambdaHandler
      ReservedConcurrentExecutions: !If
        - ApplyReservedConcurrency
        - !Ref LambdaConcurrency
        - !Ref AWS::NoValue
      Policies:
        - AWSXRayDaemonWriteAccess
        - S3WritePolicy:
            BucketName: !Ref JsonWebKeysBucket
        - S3ReadPolicy:
            BucketName: !Ref JsonWebKeysBucket
        - Statement:
            - Sid: KMSSignPolicy
              Effect: Allow
              Action:
                - kms:GetPublicKey
              Resource:
                - Fn::ImportValue: !Sub "${L2KMSStackName}-vc-signing-key"
                - Fn::ImportValue: !Sub "${L2KMSStackName}-encryption-key"
      Events:
        InvocationLevel:
          Type: Schedule
          Properties:
            Schedule: cron(0 * * * ? *)

      Environment:
        Variables:
          JWKS_BUCKET_NAME: !Ref JsonWebKeysBucket
          SIGNING_KEY_IDS:
            Fn::ImportValue: !Sub "${L2KMSStackName}-vc-signing-key"
          ENCRYPTION_KEY_IDS:
            Fn::ImportValue: !Sub "${L2KMSStackName}-encryption-key"
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - JwksHandler.ts

  JsonWebKeysLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/JsonWebKeys-${AWS::StackName}"
      RetentionInDays: !FindInMap [ EnvironmentConfiguration, !Ref Environment, logretentionindays ]

  JsonWebKeysFunctionLogsSubscriptionFilterCSLS:
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn:
        !FindInMap [ PlatformConfiguration, !Ref Environment, CSLSEGRESS ]
      FilterPattern: ""
      LogGroupName: !Ref JsonWebKeysLogGroup

  JsonWebKeysFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt JsonWebKeysFunction.Arn
      Principal: events.amazonaws.com

  JsonWebKeysFunctionFatalErorMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref JsonWebKeysLogGroup
      FilterPattern: '{ $.level = "FATAL" || $.message = "Unhandled Exception:*" }'
      MetricTransformations:
        -
          MetricValue: "1"
          MetricNamespace: !Sub "${AWS::StackName}/LogMessages"
          MetricName: "JsonWebKeysFunction-Fatalerror"

  JsonWebKeysFunctionFatalErrorAlarm:
    DependsOn:
      - "JsonWebKeysFunctionFatalErorMetricFilter"
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub "${AWS::StackName}-JsonWebKeysFunction-FatalErrorAlarm"
      AlarmDescription: !Sub "Trigger an alarm when Fatal Error occurs. ${SupportManualURL}"
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      AlarmActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      InsufficientDataActions: [ ]
      MetricName: JsonWebKeysFunction-Fatalerror
      Namespace: !Sub "${AWS::StackName}/LogMessages"
      Statistic: Sum
      Dimensions: [ ]
      Period: 60
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  JsonWebKeysConcurrency80Alarm:
    Type: AWS::CloudWatch::Alarm
    Condition: "ApplyReservedConcurrency"
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-topic-critical-alert
      OKActions:
        - !ImportValue platform-alarm-topic-critical-alert
      InsufficientDataActions: []
      AlarmDescription: !Sub "Trigger the alarm if over 80% of JsonWeb Keys concurrency is used. ${SupportManualURL}"
      AlarmName: !Sub "${AWS::StackName}-JsonWebKeysFunction-concurrency"
      MetricName: ConcurrentExecutions
      Namespace: AWS/Lambda
      Dimensions:
        - Name: FunctionName
          Value: !Ref JsonWebKeysFunction
      Statistic: Maximum
      Period: 60 # This is the minimum value for the AWS Namespace
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: !Ref LambdaConcurrencyThreshold
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching

  JsonWebKeysThrottleAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-topic-critical-alert
      OKActions:
        - !ImportValue platform-alarm-topic-critical-alert
      InsufficientDataActions: []
      AlarmDescription: !Sub "Trigger if the ${JsonWebKeysFunction} lambda throttles. ${SupportManualURL}"
      AlarmName: !Sub "${AWS::StackName}-JsonWebKeysFunction-throttles"
      MetricName: Throttles
      Namespace: AWS/Lambda
      Statistic: Sum
      Dimensions:
        - Name: FunctionName
          Value: !Ref JsonWebKeysFunction
      TreatMissingData: notBreaching
      Period: 60 # This is the minimum value for the AWS Namespace
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold

  JsonWebKeys5XXApiGwErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub "${AWS::StackName}-JsonWebKeys5XXApiGwErrorAlarm"
      AlarmDescription: !Sub "There has been a small proportion of 5XX errors on the JsonWebKeys endpoint. ${SupportManualURL}"
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      AlarmActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      InsufficientDataActions: [ ]
      Dimensions: [ ]
      EvaluationPeriods: 5
      DatapointsToAlarm: 2
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations<4 || error<2,0,errorPercentage)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub "${AWS::StackName} - BAV Credential Issuer Private API"
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /.well-known/jwks.json
            Period: 60
            Stat: Sum
        - Id: errorPercentage
          Label: errorPercentage
          ReturnData: false
          Expression: (error/invocations)*100
        - Id: error
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub "${AWS::StackName} - BAV Credential Issuer Private API"
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /.well-known/jwks.json
            Period: 60
            Stat: Sum

  JsonWebKeys5XXApiGwErrorCriticalAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub "${AWS::StackName}-JsonWebKeys5XXApiGwErrorCriticalAlarm"
      AlarmDescription: !Sub "There has been a significant proportion of 5XX errors on the JsonWebKeys endpoint. ${SupportManualURL}"
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-pagerduty-alert-topic
        - !ImportValue platform-alarm-topic-critical-alert
      AlarmActions:
        - !ImportValue platform-alarm-pagerduty-alert-topic
        - !ImportValue platform-alarm-topic-critical-alert
      InsufficientDataActions: [ ]
      Dimensions: [ ]
      EvaluationPeriods: 5
      DatapointsToAlarm: 2
      Threshold: 80
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations<10,0,errorPercentage)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub "${AWS::StackName} - BAV Credential Issuer Private API"
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /.well-known/jwks.json
            Period: 60
            Stat: Sum
        - Id: errorPercentage
          Label: errorPercentage
          ReturnData: false
          Expression: (error/invocations)*100
        - Id: error
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub "${AWS::StackName} - BAV Credential Issuer Private API"
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /.well-known/jwks.json
            Period: 60
            Stat: Sum

  JsonWebKeys4XXApiGwErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub "${AWS::StackName}-JsonWebKeys4XXApiGwErrorAlarm"
      AlarmDescription: !Sub "There has been a small proportion of 4XX errors on the JsonWebKeys endpoint. ${SupportManualURL}"
      ActionsEnabled: false   # alarm reviewed in production and decision made to disable
      OKActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      AlarmActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      InsufficientDataActions: [ ]
      Dimensions: [ ]
      EvaluationPeriods: 5
      DatapointsToAlarm: 2
      Threshold: 10
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations<3 || error<2,0,errorPercentage)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: ApiName
                  Value: !Sub "${AWS::StackName} - BAV Credential Issuer Private API"
                - Name: Resource
                  Value: /.well-known/jwks.json
                - Name: Stage
                  Value: !Ref Environment
                - Name: Method
                  Value: GET
            Period: 60
            Stat: Sum
        - Id: errorPercentage
          Label: errorPercentage
          ReturnData: false
          Expression: (error/invocations)*100
        - Id: error
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 4XXError
              Dimensions:
                - Name: ApiName
                  Value: !Sub "${AWS::StackName} - BAV Credential Issuer Private API"
                - Name: Resource
                  Value: /.well-known/jwks.json
                - Name: Stage
                  Value: !Ref Environment
                - Name: Method
                  Value: GET
            Period: 60
            Stat: Sum

  HmrcTokenFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - "HmrcTokenLogGroup"
    Properties:
      FunctionName: !Sub "HmrcToken-${AWS::StackName}"
      CodeUri: ../src/
      Handler: HmrcTokenHandler.lambdaHandler
      Timeout: 300
      ReservedConcurrentExecutions: !If
        - ApplyReservedConcurrency
        - !Ref LambdaConcurrency
        - !Ref AWS::NoValue
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: HmrcTokenHandler
          HMRC_CLIENT_ID_SSM_PATH: !Sub "/${Environment}/HMRC/CLIENT_ID"
          HMRC_CLIENT_SECRET_SSM_PATH: !Sub "/${Environment}/HMRC/CLIENT_SECRET"
          HMRC_TOKEN_SSM_PATH: !Sub "/${Environment}/HMRC/TOKEN"
          HMRC_BASE_URL: !FindInMap [ EnvironmentVariables, !Ref Environment, HMRCBASEURL ]
          HMRC_MAX_RETRIES: 10
          HMRC_TOKEN_BACKOFF_PERIOD_MS: 30000 # 30 seconds
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSXrayWriteOnlyAccess
        - SSMParameterReadPolicy:
            ParameterName: !Sub "${Environment}/HMRC/CLIENT_ID"
        - SSMParameterReadPolicy:
            ParameterName: !Sub "${Environment}/HMRC/CLIENT_SECRET"
        - Statement:
            - Sid: SSMParameterWritePolicy
              Effect: Allow
              Action:
                - ssm:PutParameter
              Resource:
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${Environment}/HMRC/TOKEN"
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - HmrcTokenHandler.ts
  
  HmrcTokenScheduledRule: 
    Type: AWS::Events::Rule
    Condition: NotLocalTestStack
    Properties: 
      Description: "ScheduledRule"
      ScheduleExpression: cron(0 0/3 * * ? *)
      State: "DISABLED"
      Targets: 
        - 
          Arn: 
            Fn::GetAtt: 
              - "HmrcTokenFunction"
              - "Arn"
          Id: "HmrcTokenFunction"

  HmrcTokenLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/HmrcToken-${AWS::StackName}"
      RetentionInDays: !FindInMap [ EnvironmentConfiguration, !Ref Environment, logretentionindays ]

  HmrcTokenFunctionLogsSubscriptionFilterCSLS:
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn:
        !FindInMap [ PlatformConfiguration, !Ref Environment, CSLSEGRESS ]
      FilterPattern: ""
      LogGroupName: !Ref HmrcTokenLogGroup

  HmrcTokenFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt HmrcTokenFunction.Arn
      Principal: events.amazonaws.com

  HmrcTokenFunctionFatalErorMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref HmrcTokenLogGroup
      FilterPattern: '{ $.level = "FATAL" || $.message = "Unhandled Exception:*" }'
      MetricTransformations:
        -
          MetricValue: "1"
          MetricNamespace: !Sub "${AWS::StackName}/LogMessages"
          MetricName: "HmrcTokenFunction-Fatalerror"

  HmrcTokenFunctionFatalErrorAlarm:
    DependsOn:
      - "HmrcTokenFunctionFatalErorMetricFilter"
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub "${AWS::StackName}-HmrcTokenFunction-FatalErrorAlarm"
      AlarmDescription: !Sub "Trigger an alarm when Fatal Error occurs. ${SupportManualURL}"
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      AlarmActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      InsufficientDataActions: [ ]
      MetricName: HmrcTokenFunction-Fatalerror
      Namespace: !Sub "${AWS::StackName}/LogMessages"
      Statistic: Sum
      Dimensions: [ ]
      Period: 60
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  HmrcTokenConcurrency80Alarm:
    Type: AWS::CloudWatch::Alarm
    Condition: "ApplyReservedConcurrency"
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-topic-critical-alert
      OKActions:
        - !ImportValue platform-alarm-topic-critical-alert
      InsufficientDataActions: []
      AlarmDescription: !Sub "Trigger the alarm if over 80% of HmrcToken concurrency is used. ${SupportManualURL}"
      AlarmName: !Sub "${AWS::StackName}-HmrcTokenFunction-concurrency"
      MetricName: ConcurrentExecutions
      Namespace: AWS/Lambda
      Dimensions:
        - Name: FunctionName
          Value: !Ref HmrcTokenFunction
      Statistic: Maximum
      Period: 60 # This is the minimum value for the AWS Namespace
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: !Ref LambdaConcurrencyThreshold
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching

  HmrcTokenThrottleAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-topic-critical-alert
      OKActions:
        - !ImportValue platform-alarm-topic-critical-alert
      InsufficientDataActions: []
      AlarmDescription: !Sub "Trigger if the ${HmrcTokenFunction} lambda throttles. ${SupportManualURL}"
      AlarmName: !Sub "${AWS::StackName}-HmrcTokenFunction-throttles"
      MetricName: Throttles
      Namespace: AWS/Lambda
      Statistic: Sum
      Dimensions:
        - Name: FunctionName
          Value: !Ref HmrcTokenFunction
      TreatMissingData: notBreaching
      Period: 60 # This is the minimum value for the AWS Namespace
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold

  ## PartialNameMatchHandler
  PartialNameMatchFunction:
    Type: AWS::Serverless::Function
    DependsOn: PartialNameMatchFunctionLogGroup
    Properties:
      FunctionName: !Sub "BAV-PartialNameMatch-${AWS::StackName}"
      DeploymentPreference:
        Type: !Ref LambdaDeploymentPreference
        Role: !GetAtt CodeDeployServiceRole.Arn
        Alarms: !If
          - UseCanaryDeploymentAlarms
          - [!Ref PartialNameMatchFunctionFatalErrorAlarm, !Ref PartialNameMatchFunctionLambdaErrors]
          - [!Ref AWS::NoValue]
      Handler: PartialNameMatchHandler.lambdaHandler
      CodeUri: ../src/
      ReservedConcurrentExecutions: !If
        - ApplyReservedConcurrency
        - !Ref LambdaConcurrency
        - !Ref AWS::NoValue
      Environment:
        Variables:
          PARTIAL_MATCHES_BUCKET: !Ref PartialNameMatchBucket
          PARTIAL_MATCHES_BUCKET_KEY: !Ref PartialNameMatchBucketKeyAlias
          POWERTOOLS_SERVICE_NAME: "PartialNameMatchHandler"
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSXrayWriteOnlyAccess
        - S3WritePolicy:
            BucketName: !Ref PartialNameMatchBucket
        - Statement:
            - Sid: "KMSEncryptForPartialMatchBucket"
              Effect: Allow
              Action:
                - "kms:Encrypt"
                - "kms:GenerateDataKey"
              Resource: !GetAtt PartialNameMatchBucketKey.Arn
        - Statement:
            - Sid: "KMSDecryptForPartialMatchQueue"
              Effect: Allow
              Action:
                - "kms:Decrypt"
                - "kms:GenerateDataKey"
              Resource: !GetAtt PartialMatchesEncryptionKey.Arn
        - Statement:
            - Effect: Allow
              Action:
                - "sqs:SendMessage"
              Resource: !GetAtt TxMASQSQueue.Arn
            - Effect: Allow
              Action:
                - "kms:Encrypt"
                - "kms:GenerateDataKey"
              Resource: !GetAtt TxMAKMSEncryptionKey.Arn
      Events:
        SQSTrigger:
          Type: SQS
          Properties:
            Queue: !GetAtt PartialMatchesQueue.Arn
            BatchSize: 10

    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: false
        EntryPoints:
          - PartialNameMatchHandler.ts

  PartialNameMatchFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/BAV-PartialNameMatch-${AWS::StackName}"
      RetentionInDays:
        !FindInMap [
          EnvironmentConfiguration,
          !Ref Environment,
          logretentionindays,
        ]

  PartialNameMatchFunctionLogsSubscriptionFilterCSLS:
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn:
        !FindInMap [ PlatformConfiguration, !Ref Environment, CSLSEGRESS ]
      FilterPattern: ""
      LogGroupName: !Ref PartialNameMatchFunctionLogGroup

  PartialNameMatchFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref PartialNameMatchFunction
      Principal: apigateway.amazonaws.com

  PartialNameMatchFunctionPermissionAlias:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref PartialNameMatchFunction.Alias
      Principal: apigateway.amazonaws.com

  PartialNameMatchFunctionFatalErorMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref PartialNameMatchFunctionLogGroup
      FilterPattern: '{ $.level = "FATAL" || $.message = "Unhandled Exception:*" }'
      MetricTransformations:
        -
          MetricValue: "1"
          MetricNamespace: !Sub "${AWS::StackName}/LogMessages"
          MetricName: "PartialNameMatchFunction-Fatalerror"

  PartialNameMatchFunctionFatalErrorAlarm:
    DependsOn:
      - "PartialNameMatchFunctionFatalErorMetricFilter"
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub "${AWS::StackName}-PartialNameMatchFunction-FatalErrorAlarm"
      AlarmDescription: !Sub "Trigger an alarm when Fatal Error occurs. ${SupportManualURL}"
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      AlarmActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      InsufficientDataActions: [ ]
      MetricName: PartialNameMatchFunction-Fatalerror
      Namespace: !Sub "${AWS::StackName}/LogMessages"
      Statistic: Sum
      Dimensions: [ ]
      Period: 60
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  PartialNameMatchFunctionLambdaErrors:
    Type: AWS::CloudWatch::Alarm
    Condition: UseCanaryDeploymentAlarms
    Properties:
      AlarmName: !Sub "${AWS::StackName}-PartialNameMatchFunctionLambdaErrors"
      AlarmDescription: !Sub Trigger an alarm when lambda errors occurs. ${SupportManualURL}
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      OKActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      InsufficientDataActions: []
      MetricName: Errors
      Namespace: AWS/Lambda
      Statistic: Sum
      Dimensions:
        - Name: Resource
          Value: !Sub "${AWS::StackName}-PartialNameMatchFunction:live"
        - Name: ExecutedVersion
          Value: !Sub PartialNameMatchFunction.Version.Version
      Period: 60
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching

  PartialNameMatchConcurrency80Alarm:
    Type: AWS::CloudWatch::Alarm
    Condition: "ApplyReservedConcurrency"
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-topic-critical-alert
      OKActions:
        - !ImportValue platform-alarm-topic-critical-alert
      InsufficientDataActions: []
      AlarmDescription: !Sub "Trigger the alarm if over 80% of Session is used. ${SupportManualURL}"
      AlarmName: !Sub "${AWS::StackName}-PartialNameMatchFunction-concurrency"
      MetricName: ConcurrentExecutions
      Namespace: AWS/Lambda
      Dimensions:
        - Name: FunctionName
          Value: !Ref PartialNameMatchFunction
      Statistic: Maximum
      Period: 60 # This is the minimum value for the AWS Namespace
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: !Ref LambdaConcurrencyThreshold
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching

  PartialNameMatchThrottleAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-topic-critical-alert
      OKActions:
        - !ImportValue platform-alarm-topic-critical-alert
      InsufficientDataActions: []
      AlarmDescription: !Sub "Trigger if the ${PartialNameMatchFunction} lambda throttles. ${SupportManualURL}"
      AlarmName: !Sub "${AWS::StackName}-PartialNameMatchFunction-throttles"
      MetricName: Throttles
      Namespace: AWS/Lambda
      Statistic: Sum
      Dimensions:
        - Name: FunctionName
          Value: !Ref PartialNameMatchFunction
      TreatMissingData: notBreaching
      Period: 60 # This is the minimum value for the AWS Namespace
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold

  CodeDeployServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - codedeploy.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSCodeDeployRoleForLambda
      PermissionsBoundary: !If [ UsePermissionsBoundary, !Ref PermissionsBoundary, !Ref AWS::NoValue ]

Outputs:
  BAVApiGatewayId:
    Description: "API GatewayID of the BAV CRI API"
    Value: !Sub "${BAVRestApi}"
    Export:
      Name: !Sub ${AWS::StackName}-BAVApiGatewayId
  BAVBackendURL:
    Description: "BAV Backend URL"
    Value: !Sub
      - "https://${CustomDomainName}"
      - CustomDomainName: !Ref BAVApiCustomDomainName
    Export:
      Name: !Sub ${AWS::StackName}-BAVBackendURL
  TxMASQSQueue:
    Description: "Arn of the TxMASQSQueue"
    Value: !GetAtt TxMASQSQueue.Arn
    Export:
      Name: !Sub ${AWS::StackName}-TxMASQSQueue-arn
  TxMAKMSEncryptionKey:
    Description: "Arn of the TxMAKMSEncryptionKey"
    Value: !GetAtt TxMAKMSEncryptionKey.Arn
    Export:
      Name: !Sub ${AWS::StackName}-TxMAKMSEncryptionKey-arn
  SessionTableName:
    Description: "Name of the Session DynamoDB table"
    Value:
      Fn::ImportValue: !Sub "${L2DynamoStackName}-session-table-name"
    Export:
      Name: !Sub ${AWS::StackName}-SessionTable-name
  SessionTableARN:
    Description: "Arn of the Session DynamoDB table"
    Value:
      Fn::ImportValue: !Sub "${L2DynamoStackName}-session-table-arn"
    Export:
      Name: !Sub ${AWS::StackName}-SessionTable-arn
  SessionTableEcryptionARN:
    Description: "Arn of the SessionTableEncryptionKey"
    Value:
      Fn::ImportValue: !Sub "${L2DynamoStackName}-session-table-key-arn"
    Export:
      Name: !Sub ${AWS::StackName}-SessionTableEncryptionKey-arn
  PersonIdentityTableEcryptionARN:
    Description: "Arn of the PersonIdentityTableEncryptionKey"
    Value:
      Fn::ImportValue: !Sub "${L2DynamoStackName}-person-identity-table-key-arn"
    Export:
      Name: !Sub ${AWS::StackName}-PersonIdentityTableEncryptionKey-arn
  PersonIdentityTableARN:
    Description: "Arn of the Session DynamoDB table"
    Value:
      Fn::ImportValue: !Sub "${L2DynamoStackName}-person-identity-table-arn"
    Export:
      Name: !Sub ${AWS::StackName}-PersonIdentityTable-arn
  ExperianTokenTableName:
    Description: "Name of the Experian Token DynamoDB table"
    Value:
      Fn::ImportValue: !Sub "${L2DynamoStackName}-experian-token-table-name"
    Export:
      Name: !Sub ${AWS::StackName}-ExperianTokenTable-name
  ExperianTokenTableARN:
    Description: "Arn of the Experian Token DynamoDB table"
    Value:
      Fn::ImportValue: !Sub "${L2DynamoStackName}-experian-token-table-arn"
    Export:
      Name: !Sub ${AWS::StackName}-ExperianToken-arn
  ExperianTokenTableEcryptionARN:
    Description: "Arn of the ExperianTokenTableEncryptionKey"
    Value:
      Fn::ImportValue: !Sub "${L2DynamoStackName}-experian-token-table-key-arn"
    Export:
      Name: !Sub ${AWS::StackName}-ExperianTokenTableEncryptionKey-arn
  BAVIPVStubExecuteURL:
    Condition: IsNotProdLikeEnvironment
    Description: "BAV IPV Stub"
    Value:
      Fn::ImportValue: !Sub '${IPVStubStackName}-IPVStubExecuteUrl'
  BAVTestHarnessURL:
    Condition: IsNotProdLikeEnvironment
    Description: "BAV Test Harness"
    Value: !FindInMap [EnvironmentVariables, !Ref Environment, TESTHARNESSURL]
  PartialNameMatchBucket:
    Condition: IsNotProdLikeEnvironment
    Description: "PartialNameMatchBucket Bucket Name"
    Value: !Ref PartialNameMatchBucket
    Export:
      Name: !Sub "${AWS::StackName}-PartialNameMatchBucket"
  PartialNameMatchAthenaResultsBucket:
    Condition: IsNotProdLikeEnvironment
    Description: "PartialNameMatchBucket Bucket Name"
    Value: !Ref PartialNameMatchAthenaResultsBucket
    Export:
      Name: !Sub "${AWS::StackName}-PartialNameMatchAthenaResultsBucket"
  PartialNameMatchGlueTable:
    Condition: IsNotProdLikeEnvironment
    Description: "PartialNameMatchGlueTable"
    Value: !Ref PartialNameMatchGlueTable
    Export:
      Name: !Sub "${AWS::StackName}-PartialNameMatchGlueTable"
  PartialNameMatchGlueDatabase:
    Condition: IsNotProdLikeEnvironment
    Description: "PartialNameMatchGlueDatabase"
    Value: !Ref PartialNameMatchGlueDatabase
    Export:
      Name: !Sub "${AWS::StackName}-PartialNameMatchGlueDatabase"
  PartialNameMatchAthenaWorkgoup:
    Condition: IsNotProdLikeEnvironment
    Description: "PartialNameMatchAthenaWorkgroup"
    Value: !Ref PartialNameMatchAthenaWorkgroup
    Export:
      Name: !Sub "${AWS::StackName}-PartialNameMatchAthenaWorkgroup"
  DNSSuffix:
    Condition: IsNotProdLikeEnvironment
    Description: "F2F DNS Suffix"
    Value: !FindInMap [EnvironmentVariables, !Ref Environment, DNSSUFFIX]
  VcSigningKeyId:
    Condition: IsNotProdLikeEnvironment
    Description: "Signing Key used to sign VC"
    Value:
      Fn::ImportValue: !Sub "${L2KMSStackName}-vc-signing-key-id"
  PartialNameMatchBucketKey:
    Condition: IsNotProdLikeEnvironment
    Description: "Symmetric key for encrypting partial name match and Athena results bucket"
    Value: !Ref PartialNameMatchBucketKey
    Export:
      Name: !Sub "${AWS::StackName}-PartialNameMatchBucketKey"
